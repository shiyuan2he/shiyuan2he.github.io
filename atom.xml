<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>远观钱途</title>
  
  <subtitle>没有绝对的热情，不足以造就伟大的工程师</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-01-07T02:09:00.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>天道悲鸣</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>springcloud实战之14动态刷新分布式配置中心属性配置（config）</title>
    <link href="http://yoursite.com/2018/01/07/springcloud%E5%AE%9E%E6%88%98%E4%B9%8B14%E5%8A%A8%E6%80%81%E5%88%B7%E6%96%B0%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E5%B1%9E%E6%80%A7%E9%85%8D%E7%BD%AE%EF%BC%88config%EF%BC%89/"/>
    <id>http://yoursite.com/2018/01/07/springcloud实战之14动态刷新分布式配置中心属性配置（config）/</id>
    <published>2018-01-07T02:07:51.000Z</published>
    <updated>2018-01-07T02:09:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇介绍如果利用bus实现动态刷新分布式配置中心<br><a id="more"></a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78803198" target="_blank" rel="external">springcloud实战之10 分布式配置中心（config）</a>介绍了如何用spring cloud config和git仓库读取配置文件，当配置文件里的属性发生变化，按照以往的惯例，必须重启服务才能够读取到新的配置属性。但springcloud config为我们提供了springcloud bus（消息总线）能够实现动态刷新配置文件。</p><h2 id="重构（springcloud-server-config）工程"><a href="#重构（springcloud-server-config）工程" class="headerlink" title="重构（springcloud-server-config）工程"></a>重构（springcloud-server-config）工程</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">relativePath</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>Edgware.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-config-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bus-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="改造入口类"><a href="#改造入口类" class="headerlink" title="改造入口类"></a>改造入口类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="meta">@EnableConfigServer</span></div><div class="line"><span class="meta">@EnableDiscoveryClient</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudServerConfigApplication</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SpringApplication.run(SpringCloudServerConfigApplication.class,args) ;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="attr">server:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">8001</span></div><div class="line"><span class="attr">management:</span></div><div class="line"><span class="attr">  security:</span></div><div class="line"><span class="attr">    enabled:</span> <span class="literal">false</span></div><div class="line"><span class="attr">spring:</span></div><div class="line"><span class="attr">  application:</span></div><div class="line"><span class="attr">    name:</span> <span class="string">springcloud-server-config</span></div><div class="line"><span class="attr">  cloud:</span></div><div class="line"><span class="attr">    config:</span></div><div class="line"><span class="attr">      server:</span></div><div class="line"><span class="attr">        git:</span></div><div class="line"><span class="attr">          uri:</span> <span class="attr">https://github.com/shiyuan2he/springcloud</span></div><div class="line"><span class="attr">          search-paths:</span> <span class="string">springcloud-repo-config</span></div><div class="line"><span class="attr">          username:</span></div><div class="line"><span class="attr">          password:</span></div><div class="line"><span class="attr">          force-pull:</span> <span class="literal">true</span></div><div class="line"><span class="attr">      label:</span> <span class="string">master</span></div><div class="line"><span class="attr">  rabbitmq:</span></div><div class="line"><span class="attr">    host:</span> <span class="number">192.168</span><span class="number">.175</span><span class="number">.128</span></div><div class="line"><span class="attr">    port:</span> <span class="number">5672</span></div><div class="line"><span class="attr">    username:</span> <span class="string">admin</span></div><div class="line"><span class="attr">    password:</span> <span class="string">admin</span></div><div class="line"><span class="attr">eureka:</span></div><div class="line"><span class="attr">  client:</span></div><div class="line"><span class="attr">    service-url:</span></div><div class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://peer1:8080/eureka/</span></div></pre></td></tr></table></figure><h2 id="重构springcloud-service-config项目"><a href="#重构springcloud-service-config项目" class="headerlink" title="重构springcloud-service-config项目"></a>重构springcloud-service-config项目</h2><h3 id="添加依赖-1"><a href="#添加依赖-1" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">relativePath</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>Edgware.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bus-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="重构入口类"><a href="#重构入口类" class="headerlink" title="重构入口类"></a>重构入口类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="meta">@EnableDiscoveryClient</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudServiceConfigApplication</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SpringApplication.run(SpringCloudServiceConfigApplication.class,args) ;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="改造web层接口"><a href="#改造web层接口" class="headerlink" title="改造web层接口"></a>改造web层接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@RefreshScope</span></div><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/api/rest"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestfulController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;user.name&#125;"</span>)</div><div class="line">    String name;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;user.age&#125;"</span>)</div><div class="line">    String age ;</div><div class="line"></div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/name"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> name +<span class="string">":"</span>+ age;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="新建配置文件bootstrap-properties"><a href="#新建配置文件bootstrap-properties" class="headerlink" title="新建配置文件bootstrap.properties"></a>新建配置文件bootstrap.properties</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">spring.application.name=springcloud-service-config</div><div class="line">spring.cloud.config.label=master</div><div class="line">spring.cloud.config.profile=dev</div><div class="line">spring.cloud.config.uri= http://localhost:8001/</div><div class="line">server.port=8003</div><div class="line"></div><div class="line">eureka.client.serviceUrl.defaultZone=http://peer1:8080/eureka/</div><div class="line">## 从配置中心读取文件</div><div class="line">spring.cloud.config.discovery.enabled=true</div><div class="line">## 配置中心的servieId，即服务名。</div><div class="line">spring.cloud.config.discovery.serviceId=springcloud-server-config</div><div class="line">spring.cloud.config.fail-fast=true</div><div class="line"></div><div class="line">spring.rabbitmq.host=192.168.175.128</div><div class="line">spring.rabbitmq.port=5672</div><div class="line">spring.rabbitmq.username=admin</div><div class="line">spring.rabbitmq.password=admin</div><div class="line"></div><div class="line">management.security.enabled=false</div></pre></td></tr></table></figure><h2 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h2><p>1.启动服务注册中心集群（springcloud-server-eureka）</p><p>2.启动服务配置中心（springcloud-server-config）</p><p>3.启动springcloud-service-config集群</p><p>启动后的服务注册图如下:</p><p><img src="http://img.blog.csdn.net/20171221163920785?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>分别调用两个读取配置文件得集群：</p><p><img src="http://img.blog.csdn.net/20171221163941979?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="http://img.blog.csdn.net/20171221163951640?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>去github仓库修改配置文件，并访问之前的集群服务，还没有立马生效</p><p><img src="http://img.blog.csdn.net/20171221164028406?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>调用<a href="http://localhost:8001/bus/refresh" target="_blank" rel="external">http://localhost:8001/bus/refresh</a> 接口刷新配置中心服务</p><p><img src="http://img.blog.csdn.net/20171221164016748?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>再次查看集群服务，如下图</p><p><img src="http://img.blog.csdn.net/20171221164057261?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="http://img.blog.csdn.net/20171221164107392?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-server-eureka" target="_blank" rel="external">springcloud-server-eureka</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-server-config" target="_blank" rel="external">springcloud-server-config</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-service-config" target="_blank" rel="external">springcloud-service-config</a></p><h2 id="历史文章"><a href="#历史文章" class="headerlink" title="历史文章"></a>历史文章</h2><p><a href="http://blog.csdn.net/u012806787/article/details/78789312" target="_blank" rel="external">springcloud实战之1 技术选型：dubbo还是springcloud</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78790958" target="_blank" rel="external">springcloud实战之2 服务注册与发现（eureka实现）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78793639" target="_blank" rel="external">springcloud实战之3 高可用服务注册中心（eureka集群）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78796605" target="_blank" rel="external">springcloud实战之5 服务消费者（ribbon）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78798951" target="_blank" rel="external">springcloud实战之6 服务消费者（Feign）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78801119" target="_blank" rel="external">springcloud实战之7 断路器（Hystrix）</a></p><p><a href="http://blog.csdn.net/u012806787" target="_blank" rel="external">springcloud实战之8 断路器-仪表盘-单例监控（Hystrix）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78862637" target="_blank" rel="external">springcloud实战之9断路器-集群监控（turbine）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78803198" target="_blank" rel="external">springcloud实战之10 分布式配置中心（config）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78863867" target="_blank" rel="external">springcloud实战之11路由网关（zuul）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78864281" target="_blank" rel="external">springcloud实战之12 路由网关拦截器</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78864867" target="_blank" rel="external">springcloud实战之13 rabbitmq消息总线（bus）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇介绍如果利用bus实现动态刷新分布式配置中心&lt;br&gt;
    
    </summary>
    
    
      <category term="springcloud,cloud,分布式配置" scheme="http://yoursite.com/tags/springcloud-cloud-%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>springcloud实战之13 rabbitmq消息总线（bus）</title>
    <link href="http://yoursite.com/2018/01/07/springcloud%E5%AE%9E%E6%88%98%E4%B9%8B13%20rabbitmq%E6%B6%88%E6%81%AF%E6%80%BB%E7%BA%BF%EF%BC%88bus%EF%BC%89/"/>
    <id>http://yoursite.com/2018/01/07/springcloud实战之13 rabbitmq消息总线（bus）/</id>
    <published>2018-01-07T02:05:52.000Z</published>
    <updated>2018-01-07T02:07:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇介绍利用rabbitmq实现消息总线bus<br><a id="more"></a><br>rabbitmq是实现了高级消息队列协议（amqp）的开源消息代理软件，也成为面向消息的中间件。RabbitMQ服务器是用高性能，可伸缩而闻名的Erlang语言编写而成的，其集群和故障转移是构建在开放电信平台框架上的。</p><p>RabbitMQ的安装这里不重复说明，可以参考<a href="http://blog.csdn.net/u012806787/article/details/78671942" target="_blank" rel="external">centos7自学之7-rabbitmq的安装与配置</a>,这里介绍spring cloud使用RabbitMQ。</p><h2 id="创建工程（springcloud-server-bus-rabbitmq）"><a href="#创建工程（springcloud-server-bus-rabbitmq）" class="headerlink" title="创建工程（springcloud-server-bus-rabbitmq）"></a>创建工程（springcloud-server-bus-rabbitmq）</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">relativePath</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>Edgware.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="创建入口类"><a href="#创建入口类" class="headerlink" title="创建入口类"></a>创建入口类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudServerBusRabbitmq</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> SpringApplicationBuilder(SpringCloudServerBusRabbitmq.class)</div><div class="line">                .web(<span class="keyword">true</span>)</div><div class="line">                .run(args)</div><div class="line">                ;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="attr">spring:</span></div><div class="line"><span class="attr">  rabbitmq:</span></div><div class="line"><span class="attr">    host:</span> <span class="number">192.168</span><span class="number">.175</span><span class="number">.128</span></div><div class="line"><span class="attr">    port:</span> <span class="number">5672</span></div><div class="line"><span class="attr">    username:</span> <span class="string">admin</span></div><div class="line"><span class="attr">    password:</span> <span class="string">admin</span></div><div class="line"><span class="attr">  application:</span></div><div class="line"><span class="attr">    name:</span> <span class="string">springcloud-server-bus-rabbitmq</span></div></pre></td></tr></table></figure><h3 id="创建配置类"><a href="#创建配置类" class="headerlink" title="创建配置类"></a>创建配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RabbitMqConfig</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String queueName = <span class="string">"springcloud-server-bus-rabbitmq"</span> ;</div><div class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">rabbitMqQueue</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(queueName);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="创建生产者"><a href="#创建生产者" class="headerlink" title="创建生产者"></a>创建生产者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Component</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Prodecer</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger _logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass()) ;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> AmqpTemplate rabbitMqTemplate ;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">()</span></span>&#123;</div><div class="line">        String context = <span class="string">"hello"</span> + <span class="keyword">new</span> Date() ;</div><div class="line">        _logger.info(<span class="string">"正在向队列发送消息：&#123;&#125;"</span>,context);</div><div class="line">        <span class="keyword">this</span>.rabbitMqTemplate.convertAndSend(RabbitMqConfig.queueName,context);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="创建消费者"><a href="#创建消费者" class="headerlink" title="创建消费者"></a>创建消费者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Component</span></div><div class="line"><span class="meta">@RabbitListener</span>(queues = RabbitMqConfig.queueName)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger _logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass()) ;</div><div class="line"></div><div class="line">    <span class="meta">@RabbitHandler</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">consumer</span><span class="params">(String message)</span></span>&#123;</div><div class="line">        _logger.info(<span class="string">"从队列获取到的消息:&#123;&#125;"</span>,message);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="创建web接口"><a href="#创建web接口" class="headerlink" title="创建web接口"></a>创建web接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/api/rest"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestfulController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    Prodecer prodecer ;</div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/message"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">message</span><span class="params">()</span></span>&#123;</div><div class="line">        prodecer.send();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="创建结构图如下"><a href="#创建结构图如下" class="headerlink" title="创建结构图如下"></a>创建结构图如下</h3><p><img src="http://img.blog.csdn.net/20171221160253093?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><p>启动springcloud-server-bus-rabbitmq。</p><p>调用服务：<a href="http://localhost:8080/api/rest/message，其效果如下图。" target="_blank" rel="external">http://localhost:8080/api/rest/message，其效果如下图。</a></p><p><img src="http://img.blog.csdn.net/20171221160307755?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-server-bus-rabbitmq" target="_blank" rel="external">springcloud-server-bus-rabbitmq</a></p><h2 id="历史文章"><a href="#历史文章" class="headerlink" title="历史文章"></a>历史文章</h2><p><a href="http://blog.csdn.net/u012806787/article/details/78789312" target="_blank" rel="external">springcloud实战之1 技术选型：dubbo还是springcloud</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78790958" target="_blank" rel="external">springcloud实战之2 服务注册与发现（eureka实现）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78793639" target="_blank" rel="external">springcloud实战之3 高可用服务注册中心（eureka集群）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78796605" target="_blank" rel="external">springcloud实战之5 服务消费者（ribbon）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78798951" target="_blank" rel="external">springcloud实战之6 服务消费者（Feign）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78801119" target="_blank" rel="external">springcloud实战之7 断路器（Hystrix）</a></p><p><a href="http://blog.csdn.net/u012806787" target="_blank" rel="external">springcloud实战之8 断路器-仪表盘-单例监控（Hystrix）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78862637" target="_blank" rel="external">springcloud实战之9断路器-集群监控（turbine）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78803198" target="_blank" rel="external">springcloud实战之10 分布式配置中心（config）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78863867" target="_blank" rel="external">springcloud实战之11路由网关（zuul）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78864281" target="_blank" rel="external">springcloud实战之12 路由网关拦截器</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇介绍利用rabbitmq实现消息总线bus&lt;br&gt;
    
    </summary>
    
      <category term="springcloud实战" scheme="http://yoursite.com/categories/springcloud%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="springcloud,rabbitmq,bus" scheme="http://yoursite.com/tags/springcloud-rabbitmq-bus/"/>
    
  </entry>
  
  <entry>
    <title>springcloud实战之12 路由网关拦截器</title>
    <link href="http://yoursite.com/2018/01/07/springcloud%E5%AE%9E%E6%88%98%E4%B9%8B12%20%E8%B7%AF%E7%94%B1%E7%BD%91%E5%85%B3%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    <id>http://yoursite.com/2018/01/07/springcloud实战之12 路由网关拦截器/</id>
    <published>2018-01-07T02:03:55.000Z</published>
    <updated>2018-01-07T02:10:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇介绍在网关项目中设计拦截器<br><a id="more"></a><br>为了能够在api网关中实现对客户端请求的校验，我们将继续介绍spring cloud zuul的另外一个核心功能：请求过滤。zuul允许开发这在api-gateway网关上通过定义过滤器来实现对请求的核心拦截与过滤，实现的方法非常简单。</p><h2 id="重构工程（springcloud-server-api-gateway）"><a href="#重构工程（springcloud-server-api-gateway）" class="headerlink" title="重构工程（springcloud-server-api-gateway）"></a>重构工程（springcloud-server-api-gateway）</h2><h3 id="新建过滤类"><a href="#新建过滤类" class="headerlink" title="新建过滤类"></a>新建过滤类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccessFilter</span> <span class="keyword">extends</span> <span class="title">ZuulFilter</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger _logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass()) ;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">filterType</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"pre"</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">filterOrder</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldFilter</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        RequestContext ctx = RequestContext.getCurrentContext() ;</div><div class="line">        HttpServletRequest request = ctx.getRequest() ;</div><div class="line"></div><div class="line">        _logger.info(<span class="string">"send &#123;&#125; to &#123;&#125;"</span>,request.getMethod(),request.getRequestURL().toString());</div><div class="line"></div><div class="line">        Object token = request.getParameter(<span class="string">"token"</span>) ;</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> == token)&#123;</div><div class="line">            _logger.error(<span class="string">"token is null ..."</span>);</div><div class="line">            ctx.setSendZuulResponse(<span class="keyword">false</span>);</div><div class="line">            ctx.setResponseStatusCode(<span class="number">401</span>);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            _logger.info(<span class="string">"access token is ok!!!"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="注册过滤器"><a href="#注册过滤器" class="headerlink" title="注册过滤器"></a>注册过滤器</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiGatewayConfig</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> AccessFilter <span class="title">accessFilter</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> AccessFilter();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="调用效果图"><a href="#调用效果图" class="headerlink" title="调用效果图"></a>调用效果图</h2><p>调用原来的接口，</p><p>调用地址：<a href="http://localhost:8004/api-b/api/rest/getMessage" target="_blank" rel="external">http://localhost:8004/api-b/api/rest/getMessage</a></p><p><img src="http://img.blog.csdn.net/20171221152827735?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>调用地址：<a href="http://localhost:8004/api-b/api/rest/getMessage?token=sss" target="_blank" rel="external">http://localhost:8004/api-b/api/rest/getMessage?token=sss</a></p><p><img src="http://img.blog.csdn.net/20171221152840170?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-server-eureka" target="_blank" rel="external">springcloud-server-eureka</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-producer-rest" target="_blank" rel="external">springcloud-producer-rest</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-consumer-feign" target="_blank" rel="external">springcloud-consumer-feign</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-consumer-ribbon" target="_blank" rel="external">springcloud-consumer-ribbon</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-server-api-gateway" target="_blank" rel="external">springcloud-server-api-gateway</a></p><h2 id="历史文章"><a href="#历史文章" class="headerlink" title="历史文章"></a>历史文章</h2><p><a href="http://blog.csdn.net/u012806787/article/details/78789312" target="_blank" rel="external">springcloud实战之1 技术选型：dubbo还是springcloud</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78790958" target="_blank" rel="external">springcloud实战之2 服务注册与发现（eureka实现）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78793639" target="_blank" rel="external">springcloud实战之3 高可用服务注册中心（eureka集群）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78796605" target="_blank" rel="external">springcloud实战之5 服务消费者（ribbon）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78798951" target="_blank" rel="external">springcloud实战之6 服务消费者（Feign）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78801119" target="_blank" rel="external">springcloud实战之7 断路器（Hystrix）</a></p><p><a href="http://blog.csdn.net/u012806787" target="_blank" rel="external">springcloud实战之8 断路器-仪表盘-单例监控（Hystrix）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78862637" target="_blank" rel="external">springcloud实战之9断路器-集群监控（turbine）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78803198" target="_blank" rel="external">springcloud实战之10 分布式配置中心（config）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78863867" target="_blank" rel="external">springcloud实战之11路由网关（zuul）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇介绍在网关项目中设计拦截器&lt;br&gt;
    
    </summary>
    
      <category term="springcloud实战" scheme="http://yoursite.com/categories/springcloud%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="springcloud,拦截器" scheme="http://yoursite.com/tags/springcloud-%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>springcloud实战之11 路由网关（zuul）</title>
    <link href="http://yoursite.com/2018/01/07/springcloud%E5%AE%9E%E6%88%98%E4%B9%8B11%20%E8%B7%AF%E7%94%B1%E7%BD%91%E5%85%B3%EF%BC%88zuul%EF%BC%89/"/>
    <id>http://yoursite.com/2018/01/07/springcloud实战之11 路由网关（zuul）/</id>
    <published>2018-01-07T02:02:12.000Z</published>
    <updated>2018-01-07T02:03:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇介绍zuul的路由网关<br><a id="more"></a><br>微服务虽然可以将我们的开发单元拆分的更为细致，有效降低了开发难度，但是他所引出的各种问题如果处理不当会成为实施过程中的不稳定因素。甚至掩盖掉原本实施微服务带来的优势。所以再微服务的实施方案中，api网关服务的使用几乎成为了必要的选择。</p><p>下面着手搭建一个可用的api-gateway服务</p><h2 id="构建springcloud-server-api-gateway服务"><a href="#构建springcloud-server-api-gateway服务" class="headerlink" title="构建springcloud-server-api-gateway服务"></a>构建springcloud-server-api-gateway服务</h2><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">relativePath</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>Edgware.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="创建入口文件"><a href="#创建入口文件" class="headerlink" title="创建入口文件"></a>创建入口文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringCloudApplication</span></div><div class="line"><span class="meta">@EnableZuulProxy</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudServerApiGatewayApplication</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SpringApplication.run(SpringCloudServerApiGatewayApplication.class,args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="attr">server:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">8004</span></div><div class="line"><span class="attr">spring:</span></div><div class="line"><span class="attr">  application:</span></div><div class="line"><span class="attr">    name:</span> <span class="string">springcloud-server-api-gateway</span></div><div class="line"><span class="attr">eureka:</span></div><div class="line"><span class="attr">  client:</span></div><div class="line"><span class="attr">    service-url:</span></div><div class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://peer1:8080/eureka/</span></div><div class="line"></div><div class="line"><span class="attr">zuul:</span></div><div class="line"><span class="attr">  routes:</span></div><div class="line"><span class="attr">    api-a:</span></div><div class="line"><span class="attr">      path:</span> <span class="string">/api-a/**</span></div><div class="line"><span class="attr">      serviceId:</span> <span class="string">springcloud-consumer-ribbon</span></div><div class="line"><span class="attr">    api-b:</span></div><div class="line"><span class="attr">      path:</span> <span class="string">/api-b/**</span></div><div class="line"><span class="attr">      serviceId:</span> <span class="string">springcloud-consumer-feign</span></div></pre></td></tr></table></figure><h2 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h2><p>1.启动服务注册中心集群（springcloud-server-eureka）</p><p>2.启动服务提供者（springcloud-producer-rest）</p><p>3.启动服务消费者（springcloud-consumer-ribbon）</p><p>4.启动服务消费者（springcloud-consumer-feign）</p><p>5.启动网关服务（springcloud-server-api-gateway）</p><p>启动完服务之后的服务注册中心如下图</p><p><img src="http://img.blog.csdn.net/20171221145759464?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>分别调用</p><p><a href="http://localhost:8004/api-b/api/rest/getMessage?token=sss" target="_blank" rel="external">http://localhost:8004/api-b/api/rest/getMessage?token=sss</a></p><p><a href="http://localhost:8004/api-b/api/rest/getMessage?token=sss" target="_blank" rel="external">http://localhost:8004/api-b/api/rest/getMessage?token=sss</a></p><p>服务，结果分别如下：</p><p><img src="http://img.blog.csdn.net/20171221145812042?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="http://img.blog.csdn.net/20171221145825198?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-server-eureka" target="_blank" rel="external">springcloud-server-eureka</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-producer-rest" target="_blank" rel="external">springcloud-producer-rest</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-consumer-feign" target="_blank" rel="external">springcloud-consumer-feign</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-consumer-ribbon" target="_blank" rel="external">springcloud-consumer-ribbon</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-server-api-gateway" target="_blank" rel="external">springcloud-server-api-gateway</a></p><h2 id="历史文章"><a href="#历史文章" class="headerlink" title="历史文章"></a>历史文章</h2><p><a href="http://blog.csdn.net/u012806787/article/details/78789312" target="_blank" rel="external">springcloud实战之1 技术选型：dubbo还是springcloud</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78790958" target="_blank" rel="external">springcloud实战之2 服务注册与发现（eureka实现）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78793639" target="_blank" rel="external">springcloud实战之3 高可用服务注册中心（eureka集群）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78796605" target="_blank" rel="external">springcloud实战之5 服务消费者（ribbon）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78798951" target="_blank" rel="external">springcloud实战之6 服务消费者（Feign）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78801119" target="_blank" rel="external">springcloud实战之7 断路器（Hystrix）</a></p><p><a href="http://blog.csdn.net/u012806787" target="_blank" rel="external">springcloud实战之8 断路器-仪表盘-单例监控（Hystrix）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78862637" target="_blank" rel="external">springcloud实战之9断路器-集群监控（turbine）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78803198" target="_blank" rel="external">springcloud实战之10 分布式配置中心（config）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇介绍zuul的路由网关&lt;br&gt;
    
    </summary>
    
      <category term="springcloud实战" scheme="http://yoursite.com/categories/springcloud%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="springcloud,zuul" scheme="http://yoursite.com/tags/springcloud-zuul/"/>
    
  </entry>
  
  <entry>
    <title>springcloud实战之9 断路器-集群监控（turbine）</title>
    <link href="http://yoursite.com/2018/01/07/springcloud%E5%AE%9E%E6%88%98%E4%B9%8B9%20%E6%96%AD%E8%B7%AF%E5%99%A8-%E9%9B%86%E7%BE%A4%E7%9B%91%E6%8E%A7%EF%BC%88turbine%EF%BC%89/"/>
    <id>http://yoursite.com/2018/01/07/springcloud实战之9 断路器-集群监控（turbine）/</id>
    <published>2018-01-07T01:59:23.000Z</published>
    <updated>2018-01-07T02:01:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇介绍利用tuibine+hystrix实现对接口服务的集群监控<br><a id="more"></a><br>上一篇介绍了单例的服务监控，本章介绍对集群的监控。通过引入turbine，通过它来汇集监控信息，并将聚合后的信息提供给Hystrix Dashboard来集中展示和监控。</p><p>其工作架构图如下：</p><p><img src="http://img.blog.csdn.net/20171221131041667?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h2 id="构建springcloud-hystrix-turbine项目"><a href="#构建springcloud-hystrix-turbine项目" class="headerlink" title="构建springcloud-hystrix-turbine项目"></a>构建springcloud-hystrix-turbine项目</h2><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">relativePath</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>Edgware.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-turbine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="创建运行入口"><a href="#创建运行入口" class="headerlink" title="创建运行入口"></a>创建运行入口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="meta">@EnableDiscoveryClient</span></div><div class="line"><span class="meta">@EnableTurbine</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudHystrixTurbineApplication</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> SpringApplicationBuilder(SpringCloudHystrixTurbineApplication.class).web(<span class="keyword">true</span>).run(args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>EnableDiscoveryClient声明是eureka client</p><p>EnableTurbine申明启用集群监控</p><h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="attr">server:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">8006</span></div><div class="line"><span class="attr">management:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">8007</span></div><div class="line"><span class="attr">spring:</span></div><div class="line"><span class="attr">  application:</span></div><div class="line"><span class="attr">    name:</span> <span class="string">springcloud-hystrix-turbine</span></div><div class="line"></div><div class="line"><span class="attr">eureka:</span></div><div class="line"><span class="attr">  client:</span></div><div class="line"><span class="attr">    service-url:</span></div><div class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://peer1:8080/eureka/</span></div><div class="line"><span class="attr">  instance:</span></div><div class="line"><span class="attr">    lease-renewal-interval-in-seconds:</span> <span class="number">30</span></div><div class="line"><span class="attr">    lease-expiration-duration-in-seconds:</span> <span class="number">90</span></div><div class="line"><span class="attr">turbine:</span></div><div class="line"><span class="attr">  app-config:</span> <span class="string">springcloud-hystrix-dashboard</span> <span class="comment"># 指定了需要收集监控信息的服务名</span></div><div class="line"><span class="attr">  cluster-name-expression:</span> <span class="string">new</span> <span class="string">String('default')</span>  <span class="comment"># 指定集群名称</span></div><div class="line"><span class="attr">  combine-host-port:</span> <span class="literal">true</span> <span class="comment"># 设置为true，可以让同一主机上的服务通过主机名与端口号的组合来进行区分，</span></div></pre></td></tr></table></figure><h2 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h2><p>1.启动服务注册中心集群（springcloud-server-eureka）</p><p>2.启动服务提供者（springcloud-producer-rest）</p><p>3.启动服务消费者（springcloud-hystirx-dashboard）</p><p>4.启动服务集群监控者（springcloud-hystrix-turbine）</p><p>启动后的注册服务图如下</p><p><img src="http://img.blog.csdn.net/20171221131100074?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>1.打开监控页面：<a href="http://localhost:8005/hystrix,如下图" target="_blank" rel="external">http://localhost:8005/hystrix,如下图</a></p><p><img src="http://img.blog.csdn.net/20171221131216339?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>2.再长框中输入集群监控地址：<a href="http://localhost:8006/turbine.stream，如下图" target="_blank" rel="external">http://localhost:8006/turbine.stream，如下图</a></p><p><img src="http://img.blog.csdn.net/20171221131228900?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>3.调用服务接口地址：<a href="http://localhost:8005/api/rest/home，即可实现监控，如下图" target="_blank" rel="external">http://localhost:8005/api/rest/home，即可实现监控，如下图</a></p><p><img src="http://img.blog.csdn.net/20171221131241204?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-server-eureka" target="_blank" rel="external">springcloud-server-eureka</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-producer-rest" target="_blank" rel="external">springcloud-producer-rest</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-hystirx-dashboard" target="_blank" rel="external">springcloud-hystirx-dashboard</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-hystrix-turbine" target="_blank" rel="external">springcloud-hystrix-turbine</a></p><h2 id="历史文章"><a href="#历史文章" class="headerlink" title="历史文章"></a>历史文章</h2><p><a href="http://blog.csdn.net/u012806787/article/details/78789312" target="_blank" rel="external">springcloud实战之1 技术选型：dubbo还是springcloud</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78790958" target="_blank" rel="external">springcloud实战之2 服务注册与发现（eureka实现）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78793639" target="_blank" rel="external">springcloud实战之3 高可用服务注册中心（eureka集群）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78796605" target="_blank" rel="external">springcloud实战之5 服务消费者（ribbon）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78798951" target="_blank" rel="external">springcloud实战之6 服务消费者（Feign）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78801119" target="_blank" rel="external">springcloud实战之7 断路器（Hystrix）</a></p><p><a href="http://blog.csdn.net/u012806787" target="_blank" rel="external">springcloud实战之8 断路器-仪表盘-单例监控（Hystrix）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇介绍利用tuibine+hystrix实现对接口服务的集群监控&lt;br&gt;
    
    </summary>
    
      <category term="springcloud实战" scheme="http://yoursite.com/categories/springcloud%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="springcloud,tuibine,hystrix" scheme="http://yoursite.com/tags/springcloud-tuibine-hystrix/"/>
    
  </entry>
  
  <entry>
    <title>断路器-仪表盘-单例监控（Hystrix）</title>
    <link href="http://yoursite.com/2018/01/07/springcloud%E5%AE%9E%E6%88%98%E4%B9%8B8%20%E6%96%AD%E8%B7%AF%E5%99%A8-%E4%BB%AA%E8%A1%A8%E7%9B%98-%E5%8D%95%E4%BE%8B%E7%9B%91%E6%8E%A7%EF%BC%88Hystrix%EF%BC%89/"/>
    <id>http://yoursite.com/2018/01/07/springcloud实战之8 断路器-仪表盘-单例监控（Hystrix）/</id>
    <published>2018-01-07T01:57:07.000Z</published>
    <updated>2018-01-07T01:59:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇介绍利用Hystrix监控接口服务<br><a id="more"></a><br>Spring Cloud不但跟Hystrix能够做到优雅的整合，还能够整合他的仪表盘组件Hystrix Dashboard，它主要用来实时监控Hystrix的各项指标信息。通过Hystrix Dashboard反馈的实时信息，可以帮助我们快速发现系统中存在的问题，从而及时的采取应对措施。</p><p>在Spring Cloud中构建Hystrix Dashboard非常简单。</p><h2 id="创建工程（springcloud-hystirx-dashboard）"><a href="#创建工程（springcloud-hystirx-dashboard）" class="headerlink" title="创建工程（springcloud-hystirx-dashboard）"></a>创建工程（springcloud-hystirx-dashboard）</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">relativePath</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;version.springcloud&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix-dashboard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="attr">spring:</span></div><div class="line"><span class="attr">  application:</span></div><div class="line"><span class="attr">    name:</span> <span class="string">springcloud-hystrix-dashboard</span></div><div class="line"><span class="attr">server:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">8005</span></div><div class="line"></div><div class="line"><span class="attr">eureka:</span></div><div class="line"><span class="attr">  client:</span></div><div class="line"><span class="attr">    service-url:</span></div><div class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://peer1:8080/eureka/</span></div><div class="line"><span class="attr">  instance:</span></div><div class="line"><span class="attr">      lease-renewal-interval-in-seconds:</span> <span class="number">45</span> <span class="comment"># 用于定义服务续约任务的调用间隔时间，默认30秒</span></div><div class="line"><span class="attr">      lease-expiration-duration-in-seconds:</span> <span class="number">90</span>  <span class="comment"># 用于定义服务失效的时间 ，默认90秒</span></div></pre></td></tr></table></figure><h3 id="创建入口文件"><a href="#创建入口文件" class="headerlink" title="创建入口文件"></a>创建入口文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="meta">@EnableDiscoveryClient</span></div><div class="line"><span class="meta">@EnableHystrixDashboard</span></div><div class="line"><span class="meta">@EnableCircuitBreaker</span> <span class="comment">// 开启断路器功能</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudHystrixDashboardApplication</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> SpringApplicationBuilder(SpringCloudHystrixDashboardApplication.class)</div><div class="line">                .web(<span class="keyword">true</span>)</div><div class="line">                .run(args) ;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="编写config文件"><a href="#编写config文件" class="headerlink" title="编写config文件"></a>编写config文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanConfig</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="meta">@LoadBalanced</span>  <span class="comment">// 开启服务端负载均衡</span></div><div class="line">    <span class="function">RestTemplate <span class="title">restTemplate</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="编写service接口"><a href="#编写service接口" class="headerlink" title="编写service接口"></a>编写service接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span>(<span class="string">"restfulSerivce"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestfulServiceImpl</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span> <span class="keyword">private</span> RestTemplate restTemplate ;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 定义服务降级逻辑(serviceFallback)</div><div class="line">     * 并且自动的实现了线程调用得依赖隔离-实现线程池的隔离，</div><div class="line">     * 为每一个依赖服务创建一个独立的线程池，这样就算某一个依赖服务出现延迟过高</div><div class="line">     * 的情况，也只是对该依赖服务的调用产生影响，而不会拖慢其他的服务。</div><div class="line">     *</div><div class="line">     * Hystrix会将请求结果放入缓存，默认缓存key既是请求参数</div><div class="line">     */</div><div class="line">    <span class="meta">@HystrixCommand</span>(fallbackMethod = <span class="string">"serviceFallback"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRestData</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">"http://springcloud-producer-rest/api/rest/info"</span>,String.class) ;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">serviceFallback</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"hi,sorry,error!"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="编写web层接口"><a href="#编写web层接口" class="headerlink" title="编写web层接口"></a>编写web层接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/api/rest"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestfulController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span> <span class="keyword">private</span> RestfulServiceImpl restfulService ;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;server.port&#125;"</span>)</div><div class="line">    String port ;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.application.name&#125;"</span>)</div><div class="line">    String name ;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/home"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">home</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"I am info from port("</span>+port+<span class="string">") from application name("</span>+name+<span class="string">") invoke other service."</span> + <span class="string">"\n"</span></div><div class="line">                +restfulService.getRestData();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="启动工程"><a href="#启动工程" class="headerlink" title="启动工程"></a>启动工程</h2><p>1.启动Eureka Server集群项目</p><p>2.启动springcloud-hystirx-dashboard项目</p><p>服务注册效果图<br><img src="http://img.blog.csdn.net/20171219154858924?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="http://img.blog.csdn.net/20171219154911444?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>注意：要想看到第二张图的效果，必须先访问一次接口，才能对接口访问情况进行监控</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-hystirx-dashboard" target="_blank" rel="external">springcloud-hystirx-dashboard</a></p><h2 id="历史文章"><a href="#历史文章" class="headerlink" title="历史文章"></a>历史文章</h2><p><a href="http://blog.csdn.net/u012806787/article/details/78789312" target="_blank" rel="external">springcloud实战之技术选型：dubbo还是springcloud</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78796605" target="_blank" rel="external">springboot实战之服务消费者（ribbon）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78798951" target="_blank" rel="external">springcloud实战之服务消费者（Feign）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78790958" target="_blank" rel="external">springcloud实战之服务注册与发现（eureka实现）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78793639" target="_blank" rel="external">springcloud实战之高可用服务注册中心（eureka集群）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78801119" target="_blank" rel="external">springcloud实战之断路器（Hystrix）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇介绍利用Hystrix监控接口服务&lt;br&gt;
    
    </summary>
    
      <category term="springcloud实战" scheme="http://yoursite.com/categories/springcloud%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="springcloud,htstrix" scheme="http://yoursite.com/tags/springcloud-htstrix/"/>
    
  </entry>
  
  <entry>
    <title>springcloud实战之2-服务注册与发现（eureka实现）</title>
    <link href="http://yoursite.com/2018/01/07/springcloud%E5%AE%9E%E6%88%98%E4%B9%8B2-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0%EF%BC%88eureka%E5%AE%9E%E7%8E%B0%EF%BC%89/"/>
    <id>http://yoursite.com/2018/01/07/springcloud实战之2-服务注册与发现（eureka实现）/</id>
    <published>2018-01-07T01:51:26.000Z</published>
    <updated>2018-01-07T01:52:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇介绍利用eureka实现服务注册与发现<br><a id="more"></a></p><h2 id="服务注册与发现"><a href="#服务注册与发现" class="headerlink" title="服务注册与发现"></a>服务注册与发现</h2><p>由于Spring Cloud为服务治理做了一层抽象接口，所以在Spring Cloud应用中可以支持多种不同的服务治理框架，比如：Netflix Eureka、Consul、Zookeeper。在Spring Cloud服务治理抽象层的作用下，我们可以无缝地切换服务治理实现，并且不影响任何其他的服务注册、服务发现、服务调用等逻辑。</p><p>Spring Cloud Eureka是Spring Cloud Netflix项目下的服务治理模块。而Spring Cloud Netflix项目是Spring Cloud的子项目之一，主要内容是对Netflix公司一系列开源产品的包装，它为Spring Boot应用提供了自配置的Netflix OSS整合。通过一些简单的注解，开发者就可以快速的在应用中配置一下常用模块并构建庞大的分布式系统。它主要提供的模块包括：服务发现（Eureka），断路器（Hystrix），智能路由（Zuul），客户端负载均衡（Ribbon）等。</p><p>Springcloud庞大的分布式系统：</p><p>服务发现与注册（Eureka）</p><ul><li>断路器（Hystrix）</li><li>智能路有，服务网关（Zuul）</li><li>客户端负载均衡（Ribbon）</li><li>分布式配置中心（config）</li><li>消息总线（Bus）</li><li>安全框架（Security）</li><li>调度中心（Zookeeper）</li></ul><p>本篇介绍如何使用spring-cloud-starter-eureka-server来搭建Spring Cloud服务注册与发现模块。</p><h3 id="创建服务注册中心（springcloud-eureka-server）"><a href="#创建服务注册中心（springcloud-eureka-server）" class="headerlink" title="创建服务注册中心（springcloud-eureka-server）"></a>创建服务注册中心（springcloud-eureka-server）</h3><p>创建一个提供服务的客户端，并向服务注册中心注册自己。</p><h4 id="创建springboot项目"><a href="#创建springboot项目" class="headerlink" title="创建springboot项目"></a>创建springboot项目</h4><h4 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&lt;parent&gt;</div><div class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.5.9.RELEASE&lt;/version&gt;</div><div class="line">    &lt;relativePath /&gt;</div><div class="line">&lt;/parent&gt;</div><div class="line">&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class="line"></div><div class="line">&lt;dependencies&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</div><div class="line">        &lt;artifactId&gt;spring-cloud-starter-eureka-server&lt;/artifactId&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line">&lt;/dependencies&gt;</div><div class="line"></div><div class="line">&lt;dependencyManagement&gt;</div><div class="line">    &lt;dependencies&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;Edgware.RELEASE&lt;/version&gt;</div><div class="line">            &lt;type&gt;pom&lt;/type&gt;</div><div class="line">            &lt;scope&gt;import&lt;/scope&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">    &lt;/dependencies&gt;</div><div class="line">&lt;/dependencyManagement&gt;</div></pre></td></tr></table></figure><h4 id="创建入口类"><a href="#创建入口类" class="headerlink" title="创建入口类"></a>创建入口类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@EnableEurekaServer</span></div><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudEurekaServerApplication</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> SpringApplicationBuilder(SpringCloudEurekaServerApplication.class).web(<span class="keyword">true</span>).run(args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h4><p>新建application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="attr">server:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">8000</span></div><div class="line"></div><div class="line"><span class="attr">eureka:</span></div><div class="line"><span class="attr">  instance:</span></div><div class="line"><span class="attr">    hostname:</span> <span class="string">localhost</span></div><div class="line"><span class="attr">  client:</span></div><div class="line"><span class="attr">    registerWithEureka:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    fetchRegistry:</span> <span class="literal">false</span></div><div class="line"><span class="attr">    serviceUrl:</span></div><div class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></div></pre></td></tr></table></figure><p>为了与后续要进行注册的服务区分，这里将服务注册中心的端口通过server.port属性设置为8000。</p><p>启动入口类，可以发现如下界面</p><p><img src="http://img.blog.csdn.net/20171213133445489?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>目前没有注册任何应用</p><h3 id="创建服务提供方"><a href="#创建服务提供方" class="headerlink" title="创建服务提供方"></a>创建服务提供方</h3><h4 id="添加依赖-1"><a href="#添加依赖-1" class="headerlink" title="添加依赖"></a>添加依赖</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&lt;parent&gt;</div><div class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.5.9.RELEASE&lt;/version&gt;</div><div class="line">    &lt;relativePath /&gt;</div><div class="line">&lt;/parent&gt;</div><div class="line">&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class="line"></div><div class="line">&lt;dependencies&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</div><div class="line">        &lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line">&lt;/dependencies&gt;</div><div class="line"></div><div class="line">&lt;dependencyManagement&gt;</div><div class="line">    &lt;dependencies&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;Edgware.RELEASE&lt;/version&gt;</div><div class="line">            &lt;type&gt;pom&lt;/type&gt;</div><div class="line">            &lt;scope&gt;import&lt;/scope&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">    &lt;/dependencies&gt;</div><div class="line">&lt;/dependencyManagement&gt;</div></pre></td></tr></table></figure><h4 id="创建入口类-1"><a href="#创建入口类-1" class="headerlink" title="创建入口类"></a>创建入口类</h4><p>使用EnableEurekaClient注解。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="meta">@EnableDiscoveryClient</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudServiceRestApplication</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SpringApplication.run(SpringCloudServiceRestApplication.class,args) ;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="创建配置文件-1"><a href="#创建配置文件-1" class="headerlink" title="创建配置文件"></a>创建配置文件</h4><p>新建application.yml</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">server:</div><div class="line">  port: <span class="number">8001</span></div><div class="line">spring:</div><div class="line">  application:</div><div class="line">    name: springcloud-service-rest</div><div class="line">eureka:</div><div class="line">  client:</div><div class="line">    serviceUrl:</div><div class="line">      defaultZone: http:<span class="comment">//localhost:8000/eureka/</span></div></pre></td></tr></table></figure><h4 id="创建restful接口"><a href="#创建restful接口" class="headerlink" title="创建restful接口"></a>创建restful接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/api/rest"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestfulController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span> <span class="keyword">private</span> RestTemplate restTemplate ;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;server.port&#125;"</span>)</div><div class="line">    String port ;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.application.name&#125;"</span>)</div><div class="line">    String name ;</div><div class="line"></div><div class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/info"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getInfo</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"I am info from port("</span>+port+<span class="string">") from application name("</span>+name+<span class="string">")"</span> ;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h4><p>启动入口类项目，发现如下截图</p><p><img src="http://img.blog.csdn.net/20171213133459132?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>访问服务，截图如下</p><p><img src="http://img.blog.csdn.net/20171213133547523?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-eureka-server" target="_blank" rel="external">springcloud-eureka-server</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-service-rest" target="_blank" rel="external">springcloud-service-rest</a></p><p>源码可能在后面的文章中会复用，有部分修改，按照博客操作就行，不是很难的东西</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="http://cloud.spring.io/spring-cloud-static/Edgware.RELEASE/multi/multi__service_discovery_eureka_clients.html#netflix-eureka-client-starter" target="_blank" rel="external">netflix-eureka-client-starter</a></p><p><a href="http://cloud.spring.io/spring-cloud-static/Edgware.RELEASE/multi/multi_spring-cloud-eureka-server.html#netflix-eureka-server-starter" target="_blank" rel="external">netflix-eureka-server-starter</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇介绍利用eureka实现服务注册与发现&lt;br&gt;
    
    </summary>
    
      <category term="springcloud实战" scheme="http://yoursite.com/categories/springcloud%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="eureka,springcloud" scheme="http://yoursite.com/tags/eureka-springcloud/"/>
    
  </entry>
  
  <entry>
    <title>springcloud实战之1技术选型:dubbo还是springcloud</title>
    <link href="http://yoursite.com/2018/01/07/springcloud%E5%AE%9E%E6%88%98%E4%B9%8B1%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B-dubbo%E8%BF%98%E6%98%AFspringcloud/"/>
    <id>http://yoursite.com/2018/01/07/springcloud实战之1技术选型-dubbo还是springcloud/</id>
    <published>2018-01-07T01:46:29.000Z</published>
    <updated>2018-01-07T01:50:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇介绍微服务技术如何选型<br><a id="more"></a></p><p>微服务自从出现之后好像全世界都在谈论微服务，16年我刚听说“微服务”，我没有太上心，无非是将业务拆分部署，然后用http调用。但17年我实践dubbo和cloud之后发现服务调用不是http协议，dubbo和cloud各自有各自的服务监控，服务注册等等功能，异常丰富。仿佛一个全新的世界，我刚踏进去一只脚，对我的冲击，震撼可以想象出来。</p><p>目前，应用springcloud 的公司还不普遍，求职面试对springcloud也没有硬性要求。然而不少阿里系出来的人才在各公司开始应用dubbo，这也导致在国内dubbo的普及更广。</p><p>那么，当我们实施微服务架构，到底是应该用dubbo还是springcloud呢？</p><p>以下内容纯属个人见解，本人知识面有限，不对之处，多多包涵。</p><h2 id="Part-1-背景"><a href="#Part-1-背景" class="headerlink" title="Part 1 背景"></a>Part 1 背景</h2><p>Dubbo，是阿里巴巴服务化治理的核心框架，并被广泛应用于阿里巴巴集团的各成员站点。阿里巴巴近几年对开源社区的贡献不论在国内还是国外都是引人注目的，RocketMq捐赠给apache并成为顶级项目，成为中国捐赠给apache（两百多个项目）的第四个开源项目，Druid连接池被誉为效率最高的数据库连接池框架等等，为国人挣足了面子。使阿里巴巴从一家电商公司上升为一家科技公司。</p><p>Springcloud拥有更强大的背景，spring社区更是Java企业界最有影响力的组织。</p><h2 id="Part-2-源码维护力度"><a href="#Part-2-源码维护力度" class="headerlink" title="Part 2 源码维护力度"></a>Part 2 源码维护力度</h2><p>Dubbo曾一度停止维护，2017年再度开始更新。</p><p>Springcloud更新力度大，处于高速迭代的阶段。</p><h2 id="Part-3-架构完整度"><a href="#Part-3-架构完整度" class="headerlink" title="Part 3 架构完整度"></a>Part 3 架构完整度</h2><p>根据微服务架构在各方面的要素，看看Spring Cloud和Dubbo都提供了哪些支持。</p><p><img src="http://img.blog.csdn.net/20171213104557034?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMjgwNjc4Nw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h2 id="Part-4-文档质量"><a href="#Part-4-文档质量" class="headerlink" title="Part 4 文档质量"></a>Part 4 文档质量</h2><p>Dubbo的文档可以说在国内开源框架中算是一流的，非常全，并且讲解的也非常深入，由于版本已经稳定不再更新，所以也不太会出现不一致的情况，另外提供了中文与英文两种版本，对于国内开发者来说，阅读起来更加容易上手，这也是dubbo在国内更火一些的原因吧。</p><p>Spring Cloud由于整合了大量组件，文档在体量上自然要比dubbo多很多，文档内容上还算简洁清楚，但是更多的是偏向整合，更深入的使用方法还是需要查看其整合组件的详细文档。另外由于Spring Cloud基于Spring Boot，很多例子相较于传统Spring应用要简单很多（因为自动化配置，很多内容都成了约定的默认配置），这对于刚接触的开发者可能会有些不适应，比较建议了解和学习Spring Boot之后再使用Spring Cloud，不然可能会出现很多一知半解的情况。</p><p>小结：虽然Spring Cloud的文档量大，但是如果使用Dubbo去整合其他第三方组件，实际也是要去阅读大量第三方组件文档的，所以在文档量上，我觉得区别不大。对于文档质量，由于Spring Cloud的迭代很快，难免会出现不一致的情况，所以在质量上我认为Dubbo更好一些。而对于文档语言上，Dubbo自然对国内开发团队来说更有优势。</p><h2 id="Part-5-总结"><a href="#Part-5-总结" class="headerlink" title="Part 5 总结"></a>Part 5 总结</h2><p>不恰当的比喻：使用Dubbo构建的微服务架构就像组装电脑，各环节我们的选择自由度很高，但是最终结果很有可能因为一条内存质量不行就点不亮了，总是让人不怎么放心，但是如果你是一名高手，那这些都不是问题；而Spring Cloud就像品牌机，在Spring Source的整合下，做了大量的兼容性测试，保证了机器拥有更高的稳定性，但是如果要在使用非原装组件外的东西，就需要对其基础有足够的了解。</p><p>从目前Spring Cloud的被关注度和活跃度上来看，很有可能将来会成为微服务架构的标准框架。所以，Spring Cloud的系列文章，我会继续写下去。也欢迎各位朋友一起交流，共同进步。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇介绍微服务技术如何选型&lt;br&gt;
    
    </summary>
    
      <category term="springcloud实战" scheme="http://yoursite.com/categories/springcloud%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="springcloud,dubbo" scheme="http://yoursite.com/tags/springcloud-dubbo/"/>
    
  </entry>
  
  <entry>
    <title>springcloud实战之0文章汇总</title>
    <link href="http://yoursite.com/2018/01/06/springcloud%E5%AE%9E%E6%88%98%E4%B9%8B0%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/"/>
    <id>http://yoursite.com/2018/01/06/springcloud实战之0文章汇总/</id>
    <published>2018-01-06T11:24:36.000Z</published>
    <updated>2018-01-06T11:25:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>springcloud系列文章汇总<br><a id="more"></a></p><h3 id="文章汇总"><a href="#文章汇总" class="headerlink" title="文章汇总"></a>文章汇总</h3><p><a href="http://blog.csdn.net/u012806787/article/details/78789312" target="_blank" rel="external">springcloud实战之1技术选型：dubbo还是springcloud</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78790958" target="_blank" rel="external">springcloud实战之2 服务注册与发现（eureka实现）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78793639" target="_blank" rel="external">springcloud实战之3 高可用服务注册中心（eureka集群）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78796605" target="_blank" rel="external">springcloud实战之5 服务消费者（ribbon）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78798951" target="_blank" rel="external">springcloud实战之6 服务消费者（Feign）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78801119" target="_blank" rel="external">springcloud实战之7 断路器（Hystrix）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78843576" target="_blank" rel="external">springcloud实战之8 断路器-仪表盘-单例监控（Hystrix）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78862637" target="_blank" rel="external">springcloud实战之9断路器-集群监控（turbine）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78803198" target="_blank" rel="external">springcloud实战之10 分布式配置中心（config）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78863867" target="_blank" rel="external">springcloud实战之11路由网关（zuul）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78864281" target="_blank" rel="external">springcloud实战之12 路由网关拦截器</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78864867" target="_blank" rel="external">springcloud实战之13 rabbitmq消息总线（bus）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78865414" target="_blank" rel="external">springcloud实战之14动态刷新分布式配置中心属性配置（config）</a></p><h3 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/shiyuan2he/springcloud.git</div><div class="line">cd springcloud</div></pre></td></tr></table></figure><h3 id="启动Eureka-Server"><a href="#启动Eureka-Server" class="headerlink" title="启动Eureka Server"></a>启动Eureka Server</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd springcloud-server-eureka</div><div class="line">mvn clean package -Dmaven.test.skip=true</div><div class="line">java -jar target/springcloud-eureka-server-1.0-SNAPSHOT.jar --spring.profiles.active=peer1</div><div class="line">java -jar target/springcloud-eureka-server-1.0-SNAPSHOT.jar --spring.profiles.active=peer2</div></pre></td></tr></table></figure><p><a href="http://peer1:8080" target="_blank" rel="external">http://peer1:8080</a></p><p><img src="http://note.youdao.com/favicon.ico" alt="image"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;springcloud系列文章汇总&lt;br&gt;
    
    </summary>
    
      <category term="springcloud实战" scheme="http://yoursite.com/categories/springcloud%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="springcloud" scheme="http://yoursite.com/tags/springcloud/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot实战之13 整合redis</title>
    <link href="http://yoursite.com/2018/01/06/SpringBoot%E5%AE%9E%E6%88%98%E4%B9%8B13%20%E6%95%B4%E5%90%88redis/"/>
    <id>http://yoursite.com/2018/01/06/SpringBoot实战之13 整合redis/</id>
    <published>2018-01-06T11:22:19.000Z</published>
    <updated>2018-01-06T11:23:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>redis是被各大小公司经常使用的中间件，因此学会并熟练使用redis能够为自己的职场发展加加分。<br><a id="more"></a></p><h2 id="创建springboot-redis项目"><a href="#创建springboot-redis项目" class="headerlink" title="创建springboot-redis项目"></a>创建springboot-redis项目</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><p>添加spring-boot-starter-data-redis jar包；spring-boot-starter-test测试jar包</p><h3 id="创建redis配置文件"><a href="#创建redis配置文件" class="headerlink" title="创建redis配置文件"></a>创建redis配置文件</h3><p>新建RedisConfig.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="meta">@EnableAutoConfiguration</span></div><div class="line"><span class="meta">@EnableCaching</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfig</span> <span class="keyword">extends</span> <span class="title">CachingConfigurerSupport</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 配置RedisTemplate</div><div class="line">     * 设置添加序列化器</div><div class="line">     * key 使用string序列化器</div><div class="line">     * value 使用Json序列化器</div><div class="line">     * 还有一种简答的设置方式，改变defaultSerializer对象的实现。</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title">redisTemplate</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">//StringRedisTemplate的构造方法中默认设置了stringSerializer</span></div><div class="line">        RedisTemplate&lt;String, Object&gt; template = <span class="keyword">new</span> RedisTemplate&lt;&gt;();</div><div class="line"></div><div class="line">        <span class="comment">// 设置key的序列化方式</span></div><div class="line">        <span class="comment">/*StringRedisSerializer stringRedisSerializer = new StringRedisSerializer();</span></div><div class="line">        template.setKeySerializer(stringRedisSerializer);</div><div class="line">        template.setHashKeySerializer(stringRedisSerializer);*/</div><div class="line"></div><div class="line">        <span class="comment">// 设置value的序列化方式</span></div><div class="line">        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer(Object.class);</div><div class="line">        ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</div><div class="line">        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</div><div class="line">        objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</div><div class="line"></div><div class="line">        jackson2JsonRedisSerializer.setObjectMapper(objectMapper);</div><div class="line">        <span class="comment">//set value serializer</span></div><div class="line">        template.setDefaultSerializer(jackson2JsonRedisSerializer);</div><div class="line"></div><div class="line">        template.setConnectionFactory(jedisConnectionFactory());</div><div class="line">        template.afterPropertiesSet();</div><div class="line">        <span class="keyword">return</span> template;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 连接redis的工厂类</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> JedisConnectionFactory <span class="title">jedisConnectionFactory</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">//构造方法中注入RedisSentinelConfiguration对象</span></div><div class="line">        JedisConnectionFactory factory = <span class="keyword">new</span> JedisConnectionFactory(jedisPoolConfig());</div><div class="line">        factory.setHostName(<span class="string">"192.168.175.128"</span>);</div><div class="line">        factory.setPort(<span class="number">6379</span>);</div><div class="line">        factory.setTimeout(<span class="number">2000</span>);</div><div class="line">        factory.setDatabase(<span class="number">1</span>);</div><div class="line">        <span class="keyword">return</span> factory;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 设置RedisCacheManager</div><div class="line">     * 使用cache注解管理redis缓存</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> RedisCacheManager <span class="title">cacheManager</span><span class="params">()</span> </span>&#123;</div><div class="line">        RedisCacheManager redisCacheManager = <span class="keyword">new</span> RedisCacheManager(redisTemplate());</div><div class="line">        <span class="keyword">return</span> redisCacheManager;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> JedisPoolConfig <span class="title">jedisPoolConfig</span><span class="params">()</span></span>&#123;</div><div class="line">        JedisPoolConfig jedisPoolConfig = <span class="keyword">new</span> JedisPoolConfig() ;</div><div class="line">        jedisPoolConfig.setMaxTotal(<span class="number">500</span>); <span class="comment">// 设置最大实例总数</span></div><div class="line">        jedisPoolConfig.setMaxIdle(<span class="number">100</span>);  <span class="comment">// 设置一个pool最多有多少个状态为idle（空闲）的实例</span></div><div class="line">        jedisPoolConfig.setMinIdle(<span class="number">100</span>);  <span class="comment">// 设置一个pool最少有多少个状态为idle（空闲）的实例</span></div><div class="line">        <span class="comment">// 表示当borrow（引入）一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException</span></div><div class="line">        jedisPoolConfig.setMaxWaitMillis(<span class="number">3</span> * <span class="number">1000</span>);</div><div class="line">        <span class="comment">// 再borrow一个redis实例的时候，是否提前进行alidate操作；true：得到的jedis实力均是可用的；</span></div><div class="line">        jedisPoolConfig.setTestOnBorrow(<span class="keyword">true</span>);</div><div class="line">        jedisPoolConfig.setTestOnReturn(<span class="keyword">true</span>);<span class="comment">// 再还给pool时，是否提前进行validate操作。</span></div><div class="line">        jedisPoolConfig.setTestWhileIdle(<span class="keyword">true</span>);</div><div class="line">        jedisPoolConfig.setMinEvictableIdleTimeMillis(<span class="number">500</span>);</div><div class="line">        jedisPoolConfig.setSoftMinEvictableIdleTimeMillis(<span class="number">1000</span>);</div><div class="line">        jedisPoolConfig.setTimeBetweenEvictionRunsMillis(<span class="number">1000</span>) ;</div><div class="line">        jedisPoolConfig.setNumTestsPerEvictionRun(<span class="number">100</span>);</div><div class="line">        <span class="keyword">return</span> jedisPoolConfig ;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 自定义生成redis-key</div><div class="line">     *</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> KeyGenerator <span class="title">keyGenerator</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> KeyGenerator() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> Object <span class="title">generate</span><span class="params">(Object o, Method method, Object... objects)</span> </span>&#123;</div><div class="line">                StringBuilder sb = <span class="keyword">new</span> StringBuilder();</div><div class="line">                sb.append(o.getClass().getName()).append(<span class="string">"."</span>);</div><div class="line">                sb.append(method.getName()).append(<span class="string">"."</span>);</div><div class="line">                <span class="keyword">for</span> (Object obj : objects) &#123;</div><div class="line">                    sb.append(obj.toString());</div><div class="line">                &#125;</div><div class="line">                System.out.println(<span class="string">"keyGenerator="</span> + sb.toString());</div><div class="line">                <span class="keyword">return</span> sb.toString();</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="创建入口类"><a href="#创建入口类" class="headerlink" title="创建入口类"></a>创建入口类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootRedisApplication</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SpringApplication.run(SpringBootRedisApplication.class,args) ;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="创建model文件"><a href="#创建model文件" class="headerlink" title="创建model文件"></a>创建model文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Long id ;</div><div class="line">    <span class="keyword">private</span> String name ;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</div><div class="line">                <span class="string">"id="</span> + id +</div><div class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</div><div class="line">                <span class="string">'&#125;'</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="创建dao层数据接口文件"><a href="#创建dao层数据接口文件" class="headerlink" title="创建dao层数据接口文件"></a>创建dao层数据接口文件</h3><p>AbstractSpringRedisCacheBase.java文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractSpringRedisCacheBase</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger _logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass()) ;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> RedisTemplate&lt;String,Object&gt; <span class="title">getRedisTemplate</span><span class="params">()</span> </span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteCacheByKey</span><span class="params">(String key)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.getRedisTemplate().delete(key);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteCacheByKeys</span><span class="params">(String... keys)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(!org.springframework.util.StringUtils.isEmpty(keys) &amp;&amp; keys.length != <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">try</span>&#123;</div><div class="line">                <span class="keyword">if</span>(keys.length == <span class="number">1</span>) &#123;</div><div class="line">                    <span class="keyword">if</span>(org.springframework.util.StringUtils.isEmpty(keys[<span class="number">0</span>])) &#123;</div><div class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"指定删除的key不能为空"</span>);</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">this</span>.getRedisTemplate().delete(keys[<span class="number">0</span>]);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    <span class="keyword">this</span>.getRedisTemplate().delete(Arrays.asList(keys));</div><div class="line">                &#125;</div><div class="line">            &#125;<span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> CacheException(CacheEnum.CACHE_HANDLE_SET_EXCEPTION) ;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"指定删除的key不能为空"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteCacheWithPattern</span><span class="params">(String pattern)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(org.springframework.util.StringUtils.isEmpty(pattern)) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"指定删除的key不能为空"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            Set&lt;String&gt; keys = <span class="keyword">this</span>.getRedisTemplate().keys(pattern);</div><div class="line">            <span class="keyword">this</span>.getRedisTemplate().delete(keys);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearCache</span><span class="params">()</span> </span>&#123;</div><div class="line">        deleteCacheWithPattern(<span class="string">"*"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteByPrefix</span><span class="params">(String prex)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(org.springframework.util.StringUtils.isEmpty(prex)) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"指定删除的key前缀不能为空"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            Set&lt;String&gt; keys = <span class="keyword">this</span>.getRedisTemplate().keys(prex + <span class="string">"*"</span>);</div><div class="line">            <span class="keyword">this</span>.getRedisTemplate().delete(keys);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteBySuffix</span><span class="params">(String suffix)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(org.springframework.util.StringUtils.isEmpty(suffix)) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"指定删除的key后缀不能为空"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            Set&lt;String&gt; keys = <span class="keyword">this</span>.getRedisTemplate().keys(<span class="string">"*"</span> + suffix);</div><div class="line">            <span class="keyword">this</span>.getRedisTemplate().delete(keys);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>AbstractSpringRedisCache.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractSpringRedisCache</span> <span class="keyword">extends</span> <span class="title">AbstractSpringRedisCacheBase</span></span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger _logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass()) ;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> RedisTemplate&lt;String,Object&gt; <span class="title">getRedisTemplate</span><span class="params">()</span> </span>;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function"><span class="keyword">boolean</span> <span class="title">putCache</span><span class="params">(String key, T obj)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(StringUtils.isBlank(key))&#123;</div><div class="line">            _logger.error(<span class="string">"key is null"</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span> ;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">final</span> <span class="keyword">byte</span>[] bkey = key.getBytes() ;</div><div class="line">        <span class="keyword">final</span> <span class="keyword">byte</span>[] bvalue = SerializerHelper.serialize(obj) ;</div><div class="line">        <span class="comment">// java8 labbda表达式</span></div><div class="line">        <span class="keyword">return</span> getRedisTemplate().execute(</div><div class="line">            (RedisConnection redisConnection) -&gt; redisConnection.setNX(bkey,bvalue)</div><div class="line">        ) ;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function"><span class="keyword">boolean</span> <span class="title">putCacheWithExpireTime</span><span class="params">(String key, T obj, <span class="keyword">long</span> expireTime)</span></span>&#123;</div><div class="line">        <span class="keyword">if</span>(StringUtils.isBlank(key))&#123;</div><div class="line">            _logger.error(<span class="string">"key is null"</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span> ;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">final</span> <span class="keyword">byte</span>[] bkey = key.getBytes() ;</div><div class="line">        <span class="keyword">final</span> <span class="keyword">byte</span>[] bvalue = SerializerHelper.serialize(obj) ;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.getRedisTemplate().execute(</div><div class="line">            (RedisConnection redisConnection) -&gt; &#123;</div><div class="line">                redisConnection.setEx(bkey,expireTime,bvalue);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        ) ;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function"><span class="keyword">boolean</span> <span class="title">putListCache</span><span class="params">(String key, List&lt;T&gt; objList)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(StringUtils.isBlank(key))&#123;</div><div class="line">            _logger.error(<span class="string">"key is null"</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span> ;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">final</span> <span class="keyword">byte</span>[] bkey = key.getBytes() ;</div><div class="line">        <span class="keyword">final</span> <span class="keyword">byte</span>[] bvalue = SerializerHelper.serializeList(objList) ;</div><div class="line">        <span class="comment">// java8 labbda表达式</span></div><div class="line">        <span class="keyword">return</span> getRedisTemplate().execute(</div><div class="line">            (RedisConnection redisConnection) -&gt; redisConnection.setNX(bkey,bvalue)</div><div class="line">        ) ;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function"><span class="keyword">boolean</span> <span class="title">putListCacheWithExpireTime</span><span class="params">(String key, List&lt;T&gt; objList, <span class="keyword">long</span> expireTime)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(StringUtils.isBlank(key))&#123;</div><div class="line">            _logger.error(<span class="string">"key is null"</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span> ;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">final</span> <span class="keyword">byte</span>[] bkey = key.getBytes() ;</div><div class="line">        <span class="keyword">final</span> <span class="keyword">byte</span>[] bvalue = SerializerHelper.serializeList(objList) ;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.getRedisTemplate().execute(</div><div class="line">            (RedisConnection redisConnection) -&gt; &#123;</div><div class="line">                redisConnection.setEx(bkey,expireTime,bvalue);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        ) ;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">getCache</span><span class="params">(String key, Class&lt;T&gt; targetClass)</span> </span>&#123;</div><div class="line">        <span class="keyword">byte</span>[] result = <span class="keyword">this</span>.getRedisTemplate().execute(</div><div class="line">            (RedisConnection redisConnection) -&gt; redisConnection.get(key.getBytes())</div><div class="line">        );</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> == result)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span> ;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> SerializerHelper.deserialize(result,targetClass);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">getListCache</span><span class="params">(String key, Class&lt;T&gt; targetClass)</span> </span>&#123;</div><div class="line">        <span class="keyword">byte</span>[] result = <span class="keyword">this</span>.getRedisTemplate().execute(</div><div class="line">                (RedisConnection redisConnection) -&gt; redisConnection.get(key.getBytes())</div><div class="line">        );</div><div class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> == result)&#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span> ;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> SerializerHelper.deserializeList(result,targetClass);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>RedisRepository.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Repository</span>(value = <span class="string">"redisRepository"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisRepository</span> <span class="keyword">extends</span> <span class="title">AbstractSpringRedisCacheEnhance</span></span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    RedisTemplate&lt;String, Object&gt; redisTemplate;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title">getRedisTemplate</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> redisTemplate;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="创建测试类"><a href="#创建测试类" class="headerlink" title="创建测试类"></a>创建测试类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">@RunWith(SpringRunner.class)</div><div class="line">@SpringBootTest(classes = SpringBootRedisApplication.class)</div><div class="line">public class RedisDaoTest &#123;</div><div class="line">    private final Logger _logger = LoggerFactory.getLogger(this.getClass()) ;</div><div class="line"></div><div class="line">    @SuppressWarnings(&quot;SpringJavaAutowiringInspection&quot;)</div><div class="line">    @Autowired private RedisRepository redisRepository ;</div><div class="line">    @Test</div><div class="line">    public void putCache() throws Exception &#123;</div><div class="line">        redisRepository.putCache(&quot;test:redis&quot;,&quot;sfasdfasdfsdf&quot;) ;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Test</div><div class="line">    public void putCacheWithExpireTime() throws Exception &#123;</div><div class="line">        redisRepository.putCacheWithExpireTime(&quot;test:redis2&quot;,&quot;sfasdfasdfsdf&quot;,5) ;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Test</div><div class="line">    public void delete() throws Exception &#123;</div><div class="line">        redisRepository.deleteCacheByKey(&quot;test:redis&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>注意：</p><p>本文会介绍StringRedisTemplate、RedisTemplate这两个模板来介绍，其中StringRedisTemplate继承自RedisTemplate，只能操作键值都是String类型的数据。在实际开发中建议使用RedisTemplate<k,v>。</k,v></p><p>其实他们两者之间的区别主要在于他们使用的序列化类。</p><p>RedisTemplate使用的是JdkSerializationRedisSerializer</p><p>StringRedisTemplate使用的是StringRedisSerializer</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;redis是被各大小公司经常使用的中间件，因此学会并熟练使用redis能够为自己的职场发展加加分。&lt;br&gt;
    
    </summary>
    
      <category term="SpringBoot实战" scheme="http://yoursite.com/categories/SpringBoot%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="redis,springboot" scheme="http://yoursite.com/tags/redis-springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot实战之0 文章汇总</title>
    <link href="http://yoursite.com/2018/01/06/SpringBoot%E5%AE%9E%E6%88%98%E4%B9%8B0%20%E6%96%87%E7%AB%A0%E6%B1%87%E6%80%BB/"/>
    <id>http://yoursite.com/2018/01/06/SpringBoot实战之0 文章汇总/</id>
    <published>2018-01-06T10:46:24.000Z</published>
    <updated>2018-01-06T10:48:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>spirngboot系列文章汇总<br><a id="more"></a></p><h2 id="spingboot实战"><a href="#spingboot实战" class="headerlink" title="spingboot实战"></a>spingboot实战</h2><ul><li><h3 id="配置篇"><a href="#配置篇" class="headerlink" title="配置篇"></a>配置篇</h3></li></ul><h4 id="第一篇：springboot读取配置文件数据"><a href="#第一篇：springboot读取配置文件数据" class="headerlink" title="第一篇：springboot读取配置文件数据 "></a>第一篇：springboot读取配置文件数据 <br></h4><p>博客地址：<a href="http://blog.csdn.net/u012806787/article/details/78583814" target="_blank" rel="external">springboot之一读取配置文件</a>  <br><br>项目地址：<a href="https://github.com/shiyuan2he/springboot/tree/master/springboot-config" target="_blank" rel="external">springboot-config</a></p><ul><li><h3 id="数据源篇"><a href="#数据源篇" class="headerlink" title="数据源篇"></a>数据源篇</h3></li></ul><h4 id="第二篇：springboot整合jdbc"><a href="#第二篇：springboot整合jdbc" class="headerlink" title="第二篇：springboot整合jdbc"></a>第二篇：springboot整合jdbc</h4><p>博客地址：暂无 <br><br>项目地址：<a href="https://github.com/shiyuan2he/springboot/tree/master/springboot-jdbc" target="_blank" rel="external">springboot-jdbc</a></p><h4 id="第三篇：springboot整合hibernate"><a href="#第三篇：springboot整合hibernate" class="headerlink" title="第三篇：springboot整合hibernate"></a>第三篇：springboot整合hibernate</h4><p>博客地址：暂无 <br><br>项目地址：<a href="https://github.com/shiyuan2he/springboot/tree/master/springboot-hibernate" target="_blank" rel="external">springboot-hibernate</a></p><h4 id="第四篇：springboot整合mybatis"><a href="#第四篇：springboot整合mybatis" class="headerlink" title="第四篇：springboot整合mybatis"></a>第四篇：springboot整合mybatis</h4><p>博客地址：暂无 <br><br>项目地址：<a href="https://github.com/shiyuan2he/springboot/tree/master/springboot-mybatis" target="_blank" rel="external">springboot-mybatis</a></p><h4 id="第五篇：springboot整合redis"><a href="#第五篇：springboot整合redis" class="headerlink" title="第五篇：springboot整合redis"></a>第五篇：springboot整合redis</h4><p>博客地址：暂无 <br><br>项目地址：<a href="https://github.com/shiyuan2he/springboot/tree/master/springboot-redis" target="_blank" rel="external">springboot-redis</a></p><ul><li><h3 id="缓存篇"><a href="#缓存篇" class="headerlink" title="缓存篇"></a>缓存篇</h3></li></ul><h4 id="第六篇：springboot使用ConcurrentMap作缓存"><a href="#第六篇：springboot使用ConcurrentMap作缓存" class="headerlink" title="第六篇：springboot使用ConcurrentMap作缓存"></a>第六篇：springboot使用ConcurrentMap作缓存</h4><p>博客地址：暂无 <br><br>项目地址：<a href="https://github.com/shiyuan2he/springboot/tree/master/springboot-cache" target="_blank" rel="external">springboot-cache</a></p><h4 id="暂未完成：springboot使用redis作缓存"><a href="#暂未完成：springboot使用redis作缓存" class="headerlink" title="暂未完成：springboot使用redis作缓存"></a>暂未完成：springboot使用redis作缓存</h4><ul><li><h3 id="定时任务和异步方法篇"><a href="#定时任务和异步方法篇" class="headerlink" title="定时任务和异步方法篇"></a>定时任务和异步方法篇</h3></li></ul><h4 id="第七篇：springboot整合定时任务"><a href="#第七篇：springboot整合定时任务" class="headerlink" title="第七篇：springboot整合定时任务"></a>第七篇：springboot整合定时任务</h4><p>博客地址：暂无 <br><br>项目地址：<a href="https://github.com/shiyuan2he/springboot/tree/master/springboot-scheduled" target="_blank" rel="external">springboot-scheduled</a></p><h4 id="第八篇：springboot整合async"><a href="#第八篇：springboot整合async" class="headerlink" title="第八篇：springboot整合async"></a>第八篇：springboot整合async</h4><p>博客地址：暂无 <br><br>项目地址：<a href="https://github.com/shiyuan2he/springboot/tree/master/springboot-async" target="_blank" rel="external">springboot-async</a></p><ul><li><h3 id="restful篇"><a href="#restful篇" class="headerlink" title="restful篇"></a>restful篇</h3></li></ul><h4 id="第九篇：springboot利用RestTemplate消费rest服务"><a href="#第九篇：springboot利用RestTemplate消费rest服务" class="headerlink" title="第九篇：springboot利用RestTemplate消费rest服务"></a>第九篇：springboot利用RestTemplate消费rest服务</h4><p>博客地址：暂无 <br><br>项目地址：<a href="https://github.com/shiyuan2he/springboot/tree/master/springboot-resttemplate" target="_blank" rel="external">springboot-resttemplate</a></p><h4 id="第十三篇：springboot利用swager2生成接口文档"><a href="#第十三篇：springboot利用swager2生成接口文档" class="headerlink" title="第十三篇：springboot利用swager2生成接口文档"></a>第十三篇：springboot利用swager2生成接口文档</h4><p>博客地址：暂无 <br><br>项目地址：<a href="https://github.com/shiyuan2he/springboot/tree/master/springboot-swagger" target="_blank" rel="external">springboot-swagger</a></p><ul><li><h3 id="web篇"><a href="#web篇" class="headerlink" title="web篇"></a>web篇</h3></li></ul><h4 id="第十篇：springboot整合表单自动验证"><a href="#第十篇：springboot整合表单自动验证" class="headerlink" title="第十篇：springboot整合表单自动验证"></a>第十篇：springboot整合表单自动验证</h4><p>博客地址：暂无 <br><br>项目地址：<a href="https://github.com/shiyuan2he/springboot/tree/master/springboot-validate-form" target="_blank" rel="external">springboot-validate-form</a></p><h4 id="第十一篇：springboot表单提交"><a href="#第十一篇：springboot表单提交" class="headerlink" title="第十一篇：springboot表单提交"></a>第十一篇：springboot表单提交</h4><p>博客地址：暂无 <br><br>项目地址：<a href="https://github.com/shiyuan2he/springboot/tree/master/springboot-submit-form" target="_blank" rel="external">springboot-submit-form</a></p><ul><li><h3 id="队列篇"><a href="#队列篇" class="headerlink" title="队列篇"></a>队列篇</h3></li></ul><h4 id="第十二篇：springboot整合rabbitmq"><a href="#第十二篇：springboot整合rabbitmq" class="headerlink" title="第十二篇：springboot整合rabbitmq"></a>第十二篇：springboot整合rabbitmq</h4><p>博客地址：暂无 <br><br>项目地址：<a href="https://github.com/shiyuan2he/springboot/tree/master/springboot-rabbitmq" target="_blank" rel="external">springboot-rabbitmq</a></p><ul><li><h3 id="邮件服务器篇"><a href="#邮件服务器篇" class="headerlink" title="邮件服务器篇"></a>邮件服务器篇</h3></li></ul><h4 id="第十四篇：springboot整合邮件服务器"><a href="#第十四篇：springboot整合邮件服务器" class="headerlink" title="第十四篇：springboot整合邮件服务器"></a>第十四篇：springboot整合邮件服务器</h4><p>博客地址：暂无 <br><br>项目地址：<a href="https://github.com/shiyuan2he/springboot/tree/master/springboot-jms" target="_blank" rel="external">springboot-jms</a></p><h4 id="未完待续。。。还有很多篇"><a href="#未完待续。。。还有很多篇" class="headerlink" title="未完待续。。。还有很多篇"></a>未完待续。。。还有很多篇</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;spirngboot系列文章汇总&lt;br&gt;
    
    </summary>
    
      <category term="SpringBoot实战" scheme="http://yoursite.com/categories/SpringBoot%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>centos7自学之8-rabbitmq的安装与配置</title>
    <link href="http://yoursite.com/2018/01/06/centos7%E8%87%AA%E5%AD%A6%E4%B9%8B8-rabbitmq%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/01/06/centos7自学之8-rabbitmq的安装与配置/</id>
    <published>2018-01-06T10:33:05.000Z</published>
    <updated>2018-01-06T10:36:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇介绍如何搭建rabbitmq消息队列服务器<br><a id="more"></a></p><h2 id="下载rabbitmq"><a href="#下载rabbitmq" class="headerlink" title="下载rabbitmq"></a>下载rabbitmq</h2><p>去rabbitmq官网仔细搜查其下载链接，找不到可以来<a href="http://www.rabbitmq.com/releases/rabbitmq-server/" target="_blank" rel="external">这里点击下载</a> <br><br>找到自己想要的版本选择rabbitmq-server-generic-unix-*.*.*.tar.xz字样的版本，因为本人尝试过*.rpm版本的安装，并不顺利，本人比较喜欢绿色安装方式</p><h2 id="下载erlang"><a href="#下载erlang" class="headerlink" title="下载erlang"></a>下载erlang</h2><p>由于rabbitmq的运行依赖erlang环境，需要先下载erlang。<br><br>去erlang的官网下载erlang，不想去官网的可以点击 <a href="http://erlang.org/download/otp_src_20.1.tar.gz" target="_blank" rel="external">这里下载</a>下载。</p><h2 id="安装erlang运行环境"><a href="#安装erlang运行环境" class="headerlink" title="安装erlang运行环境"></a>安装erlang运行环境</h2><p>由于erlang运行需要gcc gcc++等环境，需要安装插件，具体不清楚那些插件是必需的，索性一次性安装。</p><p>执行命令：</p><blockquote><p>yum -y install make gcc gcc-c++ kernel-devel m4 ncurses-devel openssl-devel unixODBC-devel</p></blockquote><p>解压erlang</p><blockquote><p>tar -zxvf otp<em>src</em><em>.</em>.*.tar.gz</p></blockquote><p>配置erlang</p><blockquote><p>./configure –prefix=/usr/local/erlang –with-ssl -enable-threads -enable-smmp-support -enable-kernel-poll –enable-hipe –without-javac</p></blockquote><p>安装erlang</p><blockquote><p>cd otp<em>src</em><em>.</em>.*.tar.gz <br><br>make <br><br>make install</p></blockquote><h2 id="配置erlang环境变量"><a href="#配置erlang环境变量" class="headerlink" title="配置erlang环境变量"></a>配置erlang环境变量</h2><blockquote><p>vim /etc/profile</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ERLANG_HOME=/usr/local/erlang</div><div class="line">PATH=$PATH:$ERLANG_HOME/bin</div></pre></td></tr></table></figure><p>使配置文件生效</p><blockquote><p>source /etc/profile <br><br>echo $PATH</p></blockquote><p>检验erlang</p><blockquote><p>erl</p></blockquote><p>有版本信息输出即成功。</p><h2 id="安装rabbitmq"><a href="#安装rabbitmq" class="headerlink" title="安装rabbitmq"></a>安装rabbitmq</h2><blockquote><p>cd <br><br>xz -d rabbitmq-server-generic-unix-*.*.*.tar.xz <br><br>tar -xvf rabbitmq-server-generic-unix-*.*.*.tar <br><br>cd  cd ./rabbitmq_server-3.6.3/sbin <br></p></blockquote><p>启用web管理界面</p><blockquote><p>./rabbitmq-plugins enable rabbitmq_management</p></blockquote><p>启动</p><blockquote><p>./rabbitmq-server -detached</p></blockquote><p>添加用户</p><blockquote><p>./rabbitmqctl add_user admin admin</p></blockquote><p>设置权限</p><blockquote><p>./rabbitmqctl set_user_tags admin administrator<br>./rabbitmqctl  set_permissions username  “.*“  “.*“   “.*“<br>./rabbitmqctl  list_user_permissions admin</p></blockquote><p>访问管理页<br>ip:15672</p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>至此结束，书写博客是为了防止忘记，后续java操作rabbit会更新到博客。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇介绍如何搭建rabbitmq消息队列服务器&lt;br&gt;
    
    </summary>
    
      <category term="linux自学" scheme="http://yoursite.com/categories/linux%E8%87%AA%E5%AD%A6/"/>
    
    
      <category term="rabbitmq,erlang" scheme="http://yoursite.com/tags/rabbitmq-erlang/"/>
    
  </entry>
  
  <entry>
    <title>centos7自学之4-mariadb数据库的安装</title>
    <link href="http://yoursite.com/2018/01/06/centos7%E8%87%AA%E5%AD%A6%E4%B9%8B4-mariadb%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2018/01/06/centos7自学之4-mariadb数据库的安装/</id>
    <published>2018-01-06T10:28:24.000Z</published>
    <updated>2018-01-06T11:27:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>centos安装mariadb数据库<br><a id="more"></a></p><h2 id="一）全部删除系统自带的MySQL-MariaDB"><a href="#一）全部删除系统自带的MySQL-MariaDB" class="headerlink" title="一）全部删除系统自带的MySQL/MariaDB"></a>一）全部删除系统自带的MySQL/MariaDB</h2><ul><li>MySQL 已经不再包含在 CentOS 7 的源中，而改用了 MariaDB;</li></ul><ol><li>使用rpm -qa | grep mariadb搜索 MariaDB 现有的包。使用rpm -qa | grep mysql 搜索<br> mysql 现有的包：如果存在，使用rpm -e –nodeps mariadb-<em>，rpm -e –nodeps mysql</em>全部删除：</li><li>使用rpm -qa | grep mariadb，rpm -qa | grep mysql再次搜索 MariaDB，mysql<br> 现有的包：如果存在，使用yum remove mysql-<em> | yum remove mariadb-</em>全部删除；</li><li>使用 yum list installed | grep mysql   或者 yum list installed | grep mariadb<br> 如果存在，使用yum remove mysql-<em> | yum remove mariadb-</em>全部删除；</li></ol><h2 id="二）添加MariaDB的yum源"><a href="#二）添加MariaDB的yum源" class="headerlink" title="二）添加MariaDB的yum源"></a>二）添加MariaDB的yum源</h2><ol><li>创建 /etc/yum.repos.d/MariaDB.repo：   <pre><code>vi + /etc/yum.repos.d/MariaDB.repo</code></pre></li><li>添加yum源,该文件中添加如图所示内容：</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># MariaDB 10.1 CentOS repository list - created 2016-03-03 13:06 UTC</div><div class="line">#http://mariadb.org/mariadb/repositories/</div><div class="line">[mariadb]</div><div class="line">name = MariaDB</div><div class="line">baseurl = http://yum.mariadb.org/10.1/centos7-amd64</div><div class="line">gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB</div><div class="line">gpgcheck=1</div></pre></td></tr></table></figure><p>———————————————下载地址<br><a href="https://downloads.mariadb.org/mariadb/repositories/#mirror=opencas&amp;distro=CentOS&amp;distro_release=centos7-amd64--centos7&amp;version=10.1" target="_blank" rel="external">https://downloads.mariadb.org/mariadb/repositories/#mirror=opencas&amp;distro=CentOS&amp;distro_release=centos7-amd64--centos7&amp;version=10.1</a></p><h2 id="三）安装-MariaDB"><a href="#三）安装-MariaDB" class="headerlink" title="三）安装 MariaDB"></a>三）安装 MariaDB</h2><p>运行yum install MariaDB-server MariaDB-client  命令安装 MariaDB<br>或者  sudo yum install MariaDB-server MariaDB-client</p><h2 id="四）启动、配置MariaDB"><a href="#四）启动、配置MariaDB" class="headerlink" title="四）启动、配置MariaDB"></a>四）启动、配置MariaDB</h2><ol><li>使用service mysql start命令启动MariaDB 服务</li><li>接着运行 mysql_secure_installation配置MariaDB：<pre><code>配置选项：y n n n y</code></pre></li></ol><h2 id="五）登录-MariaDB-并创建相应的数据库用户与数据库"><a href="#五）登录-MariaDB-并创建相应的数据库用户与数据库" class="headerlink" title="五）登录 MariaDB 并创建相应的数据库用户与数据库"></a>五）登录 MariaDB 并创建相应的数据库用户与数据库</h2><ol><li>使用mysql -u root -p登录，回车之后会提示输入密码。注意密码没有回显；</li><li>创建新用户，CREATE USER ‘paac’@’localhost’ IDENTIFIED BY<br>‘password’;其中password填写自己设置的密码。当然后面也可以修改；</li></ol><h2 id="六）使用新用户连接数据库"><a href="#六）使用新用户连接数据库" class="headerlink" title="六）使用新用户连接数据库"></a>六）使用新用户连接数据库</h2><ol><li>执行mysql -u paac -p 回车之后会提示输入密码，填写之前创建用户设置的密码即可登录</li><li>执行相应命令，设置存储引擎、创建数据库、设置用户权限；<br>创建数据库</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> paac <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8;</div><div class="line">user paac ;</div><div class="line">创建表</div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</div><div class="line"><span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">11</span>) primary <span class="keyword">key</span> ,</div><div class="line">username <span class="built_in">varchar</span>(<span class="number">12</span>) <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line"><span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="literal">null</span></div><div class="line">) <span class="keyword">default</span> <span class="keyword">charset</span> = utf8;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;centos安装mariadb数据库&lt;br&gt;
    
    </summary>
    
    
      <category term="mariadb,centos7" scheme="http://yoursite.com/tags/mariadb-centos7/"/>
    
  </entry>
  
  <entry>
    <title>centos7自学外传之2-java开发环境配置</title>
    <link href="http://yoursite.com/2018/01/06/centos7%E8%87%AA%E5%AD%A6%E5%A4%96%E4%BC%A0%E4%B9%8B2-java%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/01/06/centos7自学外传之2-java开发环境配置/</id>
    <published>2018-01-06T10:00:09.000Z</published>
    <updated>2018-01-06T10:01:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>jdk环境变量配置<br><a id="more"></a></p><h2 id="jdk环境变量配置"><a href="#jdk环境变量配置" class="headerlink" title="jdk环境变量配置"></a>jdk环境变量配置</h2><ol><li>查看当前系统jdk    java -version</li><li><p>进一步查看jdk信息     </p><pre><code>rpm -qa | grep javarpm -qa | grep jdkrpm -qa | grep -E &apos;^open[jre|jdk]|j[re|dk]&apos;</code></pre></li><li><p>卸载jdk    </p><pre><code>rpm -e --nodeps + 上面查出来的openjdk相关</code></pre></li><li>进oracle官网下载适用于自己版本的<em>.rpm或</em>.tar.gz 格式的jdk</li></ol><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">下载地址</a></p><ol><li><p>rpm安装方式</p><pre><code>rpm -ivh *.rpm</code></pre></li><li>验证安装，终端输入 java  或者 javac 或者 java -version</li><li><p>配置环境变量    </p><pre><code>vi | vim /etc/profile</code></pre><p> 向文件里面添加以下内容：                    </p><pre><code># jdk 环境变量配置 JAVA_HOME=&quot;/usr/java/jdk1.8.0_92&quot;JRE_HOME=&quot;/usr/java/jdk1.8.0_92/jre&quot;PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin# CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/libexport JAVA_HOME JRE_HOME PATH # CLASSPATH</code></pre></li><li><p>是修改生效  </p><pre><code>source /etc/profile  或者 reboot</code></pre></li><li><p>查看全局环境变量    </p><pre><code>echo $PATH    </code></pre></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jdk环境变量配置&lt;br&gt;
    
    </summary>
    
      <category term="linux自学" scheme="http://yoursite.com/categories/linux%E8%87%AA%E5%AD%A6/"/>
    
    
      <category term="jdk" scheme="http://yoursite.com/tags/jdk/"/>
    
  </entry>
  
  <entry>
    <title>centos7自学外传之1-挂载ntfs</title>
    <link href="http://yoursite.com/2018/01/06/centos7%E8%87%AA%E5%AD%A6%E5%A4%96%E4%BC%A0%E4%B9%8B1-%E6%8C%82%E8%BD%BDntfs/"/>
    <id>http://yoursite.com/2018/01/06/centos7自学外传之1-挂载ntfs/</id>
    <published>2018-01-06T09:50:17.000Z</published>
    <updated>2018-01-06T09:52:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>Centos7 默认不能挂载NTFS文件系统，这里我们就需要一个第三方的工具才能挂载NTFS文件系统，就是ntfs-3g</p><a id="more"></a><ol><li>需要去官网上下载源码安装包或者复制下载链接到终端，使用wget命令下载 wget <a href="https://tuxera.com/opensource/ntfs-3g_ntfsprogs-2016.2.22.tgz" target="_blank" rel="external">https://tuxera.com/opensource/ntfs-3g_ntfsprogs-2016.2.22.tgz</a></li><li>解压安装包 tar -xvf ntfs-*.gtz</li><li><p>进入解压后的ntfs-3g文件夹内，运行./configure &amp;&amp; make &amp;&amp; make install</p><pre><code>如果是初装系统，需要切换root用户安装 gcc源码编译工具yum install gcc 然后再次以root用户运行./configure &amp;&amp; make &amp;&amp; make install。本人尝试用robot(一般用户运行失败)</code></pre></li><li>插上硬盘运行 fdisk -l  在终端底部出现  Device Boot 行的下面有外界硬盘盘符，本人是 /dev/sdc1==不同人可能不一样</li><li><p>将/dev/sdc1 挂在到/home/robot/Public 下    </p><pre><code>mount -t ntfs-3g /dev/sdc1 /home/robot/Public  </code></pre></li><li><p>验证挂载成功与否    </p><pre><code>cd /home/robot/Public</code></pre></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Centos7 默认不能挂载NTFS文件系统，这里我们就需要一个第三方的工具才能挂载NTFS文件系统，就是ntfs-3g&lt;/p&gt;
    
    </summary>
    
    
      <category term="mount,ntfs" scheme="http://yoursite.com/tags/mount-ntfs/"/>
    
  </entry>
  
  <entry>
    <title>spring实战2 spring整合slf4j+logback架构日志框架</title>
    <link href="http://yoursite.com/2018/01/06/spring%E5%AE%9E%E6%88%982_spring%E6%95%B4%E5%90%88slf4j+logback%E6%9E%B6%E6%9E%84%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6/"/>
    <id>http://yoursite.com/2018/01/06/spring实战2_spring整合slf4j+logback架构日志框架/</id>
    <published>2018-01-06T09:06:56.000Z</published>
    <updated>2018-01-06T09:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>项目未起，日志先行。本篇介绍spring如何整合slf4j+logback日志框架<br><a id="more"></a><br>如果对slf4j有不太了解的，可以参考本人另外一片文章<a href="http://blog.csdn.net/u012806787/article/details/77323615" target="_blank" rel="external">日志框架之2 slf4j+logback实现日志架构</a></p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>在resources下面创建logback.xml配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">"true"</span> <span class="attr">scanPeriod</span>=<span class="string">"1 seconds"</span> <span class="attr">debug</span>=<span class="string">"true"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">timestamp</span> <span class="attr">key</span>=<span class="string">"byDay"</span> <span class="attr">datePattern</span>=<span class="string">"yyyy-MM-dd"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">timestamp</span> <span class="attr">key</span>=<span class="string">"byHour"</span> <span class="attr">datePattern</span>=<span class="string">"yyyyMMdd_HH"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">timestamp</span> <span class="attr">key</span>=<span class="string">"byMinute"</span> <span class="attr">datePattern</span>=<span class="string">"yyyyMMdd'T'HH:mm"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">timestamp</span> <span class="attr">key</span>=<span class="string">"bySecond"</span> <span class="attr">datePattern</span>=<span class="string">"yyyyMMdd'T'HHmmss"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pattern"</span> <span class="attr">value</span>=<span class="string">"%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; [%file:%line] - %msg%n"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"charsetEncoding"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--控制台日志--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"console"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>$&#123;charsetEncoding&#125;<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--滚动文件日志--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>./logback/mylog.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>./logback/mylog.%d&#123;yyyy-MM-dd_HH&#125;.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">totalSizeCap</span>&gt;</span>3GB<span class="tag">&lt;/<span class="name">totalSizeCap</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;pattern&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="comment">&lt;!--设置多个级别的日志--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"debug"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"console"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"file"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><p>新建TestLogger.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLogger</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger _logger = LoggerFactory.getLogger(TestLogger.class) ;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</div><div class="line">            _logger.info(<span class="string">"服务器日志&#123;&#125;"</span>,i);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>运行TestLogger.java文件，效果如图</p><p><img src="/uploads/logback1.png" alt="image"></p><p>项目结构图</p><p><img src="/uploads/logback2.png" alt="image"></p><h2 id="历史文章"><a href="#历史文章" class="headerlink" title="历史文章"></a>历史文章</h2><p><a href="http://blog.csdn.net/u012806787/article/details/78611037" target="_blank" rel="external">spring实战1 读取配置文件属性</a></p><h2 id="官方资料"><a href="#官方资料" class="headerlink" title="官方资料"></a>官方资料</h2><p><a href="https://logback.qos.ch/manual/configuration.html" target="_blank" rel="external">logback 官方资料</a></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://github.com/shiyuan2he/spring/tree/master/spring-slf4j-logback" target="_blank" rel="external">spring-slf4j-logback</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目未起，日志先行。本篇介绍spring如何整合slf4j+logback日志框架&lt;br&gt;
    
    </summary>
    
      <category term="spring实战" scheme="http://yoursite.com/categories/spring%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="spring,slf4j+logback,logback" scheme="http://yoursite.com/tags/spring-slf4j-logback-logback/"/>
    
  </entry>
  
  <entry>
    <title>springcloud实战之10 分布式配置中心（config）</title>
    <link href="http://yoursite.com/2017/12/16/springcloud%E5%AE%9E%E6%88%98%E4%B9%8B10%20%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%EF%BC%88config%EF%BC%89/"/>
    <id>http://yoursite.com/2017/12/16/springcloud实战之10 分布式配置中心（config）/</id>
    <published>2017-12-16T07:50:14.000Z</published>
    <updated>2018-01-07T01:56:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>springcloud微服务实现分布式配置中心<br><a id="more"></a><br>基于为服务群，如果为每个服务读取自己的配置文件，有点重复造轮子。spingcloud提供了一个git远程仓库来创建分布式配置中心。</p><h2 id="构建Config-Server"><a href="#构建Config-Server" class="headerlink" title="构建Config Server"></a>构建Config Server</h2><p>创建一个springcloud-server-config项目</p><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">relativePath</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>Edgware.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-config-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h3><p>新建application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="attr">server:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">8001</span></div><div class="line"></div><div class="line"><span class="attr">spring:</span></div><div class="line"><span class="attr">  application:</span></div><div class="line"><span class="attr">    name:</span> <span class="string">springcloud-server-config</span></div><div class="line"><span class="attr">  cloud:</span></div><div class="line"><span class="attr">    config:</span></div><div class="line"><span class="attr">      server:</span></div><div class="line"><span class="attr">        git:</span></div><div class="line"><span class="attr">          uri:</span> <span class="attr">https://github.com/shiyuan2he/springcloud</span></div><div class="line"><span class="attr">          search-paths:</span> <span class="string">springcloud-repo-config</span> <span class="comment">## 配置仓库路径下的相对搜索位置，可以配置多个</span></div><div class="line"><span class="attr">          username:</span></div><div class="line"><span class="attr">          password:</span></div><div class="line"><span class="attr">      label:</span> <span class="string">master</span></div><div class="line"></div><div class="line"><span class="attr">eureka:</span></div><div class="line"><span class="attr">  client:</span></div><div class="line"><span class="attr">    service-url:</span></div><div class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://peer1:8080/eureka/</span></div></pre></td></tr></table></figure><h3 id="添加入口类"><a href="#添加入口类" class="headerlink" title="添加入口类"></a>添加入口类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="meta">@EnableConfigServer</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudConfigServerApplication</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SpringApplication.run(SpringCloudConfigServerApplication.class,args) ;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>Server config已经配置完成</p><h2 id="构建Config-Client"><a href="#构建Config-Client" class="headerlink" title="构建Config Client"></a>构建Config Client</h2><h3 id="添加依赖-1"><a href="#添加依赖-1" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">relativePath</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>Edgware.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="添加配置文件-1"><a href="#添加配置文件-1" class="headerlink" title="添加配置文件"></a>添加配置文件</h3><p>新建bootstrap.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">spring.application.name=springcloud-service-config</div><div class="line">spring.cloud.config.label=master</div><div class="line">spring.cloud.config.profile=dev</div><div class="line">spring.cloud.config.uri= http://localhost:8001/</div><div class="line">server.port=8002</div><div class="line"></div><div class="line">eureka.client.serviceUrl.defaultZone=http://peer1:8080/eureka/</div><div class="line">## 从配置中心读取文件</div><div class="line">spring.cloud.config.discovery.enabled=true</div><div class="line">## 配置中心的servieId，即服务名。</div><div class="line">spring.cloud.config.discovery.serviceId=springcloud-config-server</div></pre></td></tr></table></figure><h3 id="创建入口类"><a href="#创建入口类" class="headerlink" title="创建入口类"></a>创建入口类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudConfigClientApplication</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SpringApplication.run(SpringCloudConfigClientApplication.class,args) ;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="创建web层接口"><a href="#创建web层接口" class="headerlink" title="创建web层接口"></a>创建web层接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/api/rest"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestfulController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;user.name&#125;"</span>)</div><div class="line">    String name;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;user.age&#125;"</span>)</div><div class="line">    String age ;</div><div class="line"></div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/name"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> name +<span class="string">":"</span>+ age;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="构建仓库"><a href="#构建仓库" class="headerlink" title="构建仓库"></a>构建仓库</h3><p>在<a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-config-repo" target="_blank" rel="external">仓库</a>下新建配置文件springcloud-service-config-dev.properties</p><p>内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">user.name=hehe</div><div class="line">user.age=18</div></pre></td></tr></table></figure><h3 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h3><p>启动springcloud-service-config项目</p><h2 id="测试项目"><a href="#测试项目" class="headerlink" title="测试项目"></a>测试项目</h2><p>调用<a href="http://localhost:8002/api/rest/name" target="_blank" rel="external">http://localhost:8002/api/rest/name</a></p><p>效果图：</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;springcloud微服务实现分布式配置中心&lt;br&gt;
    
    </summary>
    
      <category term="springcloud实战" scheme="http://yoursite.com/categories/springcloud%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="springcloud,config,分布式配置中心" scheme="http://yoursite.com/tags/springcloud-config-%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>springcloud实战之7 断路器（Hystrix）</title>
    <link href="http://yoursite.com/2017/12/16/springcloud%E5%AE%9E%E6%88%98%E4%B9%8B7%20%E6%96%AD%E8%B7%AF%E5%99%A8%EF%BC%88Hystrix%EF%BC%89/"/>
    <id>http://yoursite.com/2017/12/16/springcloud实战之7 断路器（Hystrix）/</id>
    <published>2017-12-16T07:48:35.000Z</published>
    <updated>2018-01-07T01:56:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>springcloud实现服务熔断机制<br><a id="more"></a></p><p>在微服务广泛使用的架构中，成群的服务通过服务注册与订阅来建立关联，但每个微服务都是独立的部分（跨进程，跨机器，跨机房），服务之间通过远程调用的方式相互访问，这种架构就增加了因为网络原因造成阻塞的风险，一旦发生阻塞，一个请求经过漫长的等待最终失败，高并发情况下就可能导致整个为服务群体瘫痪，就性能上，此种微服务架构还不如传统的集中式服务安全，稳定，性能高。为了解决这种问题，springcloud提供了断路器。</p><h2 id="断路器简介"><a href="#断路器简介" class="headerlink" title="断路器简介"></a>断路器简介</h2><p>“断路器”本身是一种开关装置，用于在电路上保护线路过载，当线路中有电器发生短路时，“断路器”能够及时的切断故障电路，防止发生过载、发热、甚至起火等严重后果。</p><p>在分布式架构中，断路器模式的作用也是类似的，当某个服务单元发生故障（类似用电器发生短路）之后，通过断路器的故障监控（类似熔断保险丝），向调用方返回一个错误响应，而不是长时间的等待。这样就不会使得线程因调用故障服务被长时间占用不释放，避免了故障在分布式系统中的蔓延。</p><p>在Spring Cloud中使用了Hystrix 来实现断路器的功能。Hystrix是Netflix开源的微服务框架套件之一，该框架目标在于通过控制那些访问远程系统、服务和第三方库的节点，从而对延迟和故障提供更强大的容错能力。Hystrix具备拥有回退机制和断路器功能的线程和信号隔离，请求缓存和请求打包，以及监控和配置等功能。</p><h2 id="改造springcloud-consumer-ribbon项目"><a href="#改造springcloud-consumer-ribbon项目" class="headerlink" title="改造springcloud-consumer-ribbon项目"></a>改造springcloud-consumer-ribbon项目</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="改造service接口"><a href="#改造service接口" class="headerlink" title="改造service接口"></a>改造service接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span>(<span class="string">"restfulSerivce"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestfulServiceImpl</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span> <span class="keyword">private</span> RestTemplate restTemplate ;</div><div class="line"></div><div class="line">    <span class="meta">@HystrixCommand</span>(fallbackMethod = <span class="string">"serviceFallback"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRestData</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">"http://springcloud-producer-rest/api/rest/info"</span>,String.class) ;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">serviceFallback</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"hi,sorry,error!"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h3><p>1.启动springcloud-eureka-server集群，端口分别为 8080，8090</p><p>2.启动springcloud-producer-rest，端口分别为 8001</p><p>3.启动springcloud-consumer-ribbon，端口 8002</p><p>启动服务图如下：</p><p>访问<a href="http://localhost:8002/api/rest/home服务图如下：" target="_blank" rel="external">http://localhost:8002/api/rest/home服务图如下：</a></p><p>此时停掉springcloud-producer-rest服务，再次访问接口<a href="http://localhost:8002/api/rest/home，如下图：" target="_blank" rel="external">http://localhost:8002/api/rest/home，如下图：</a></p><p>说明断路器起了效果！</p><h2 id="改造springcloud-consumer-feign项目"><a href="#改造springcloud-consumer-feign项目" class="headerlink" title="改造springcloud-consumer-feign项目"></a>改造springcloud-consumer-feign项目</h2><h3 id="添加依赖-1"><a href="#添加依赖-1" class="headerlink" title="添加依赖"></a>添加依赖</h3><p>不需要在Feigh工程中引入Hystix，Feign中已经依赖了Hystrix，</p><h3 id="改造service层接口"><a href="#改造service层接口" class="headerlink" title="改造service层接口"></a>改造service层接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@FeignClient</span>(value = <span class="string">"springcloud-producer-rest"</span>,fallback = SchedualRestServiceHystrix.class)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ISchedualRestService</span> </span>&#123;</div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/api/rest/info"</span>)</div><div class="line">    <span class="function">String <span class="title">info</span><span class="params">()</span> </span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>新建SchedualRestServiceHystrix.java,继承ISchedualRestService</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">@Service(value = &quot;schedualRestService&quot;)</div><div class="line">public class SchedualRestServiceHystrix implements ISchedualRestService&#123;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public String info() &#123;</div><div class="line">        return &quot;error,this is Hystrix return&quot;;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p>1.启动springcloud-eureka-server集群，端口分别为 8080，8090</p><p>2.启动springcloud-producer-rest，端口分别为 8001</p><p>3.启动服务消费者springcloud-consumer-feign。端口 8003</p><p>测试结果如下图：</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-server-eureka" target="_blank" rel="external">springcloud-server-eureka</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-producer-rest" target="_blank" rel="external">springcloud-producer-rest</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-consumer-feign" target="_blank" rel="external">springcloud-consumer-feign</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-consumer-ribbon" target="_blank" rel="external">springcloud-consumer-ribbon</a></p><h2 id="历史文章"><a href="#历史文章" class="headerlink" title="历史文章"></a>历史文章</h2><p><a href="http://blog.csdn.net/u012806787/article/details/78793639" target="_blank" rel="external">springcloud实战之高可用服务注册中心（eureka集群）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78790958" target="_blank" rel="external">springcloud实战之服务注册与发现（eureka实现）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78789312" target="_blank" rel="external">springcloud实战之技术选型：dubbo还是springcloud</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78796605" target="_blank" rel="external">springboot实战之服务消费者（ribbon）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78798951" target="_blank" rel="external">springcloud实战之服务消费者（Feign）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;springcloud实现服务熔断机制&lt;br&gt;
    
    </summary>
    
      <category term="springcloud实战" scheme="http://yoursite.com/categories/springcloud%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="springcloud,hystrix" scheme="http://yoursite.com/tags/springcloud-hystrix/"/>
    
  </entry>
  
  <entry>
    <title>springcloud实战之6 服务消费者（Feign）</title>
    <link href="http://yoursite.com/2017/12/16/springcloud%E5%AE%9E%E6%88%98%E4%B9%8B6%20%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85%EF%BC%88Feign%EF%BC%89/"/>
    <id>http://yoursite.com/2017/12/16/springcloud实战之6 服务消费者（Feign）/</id>
    <published>2017-12-16T07:46:28.000Z</published>
    <updated>2018-01-07T01:55:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>springcloud利用feign实现服务消费者<br><a id="more"></a><br>上一篇介绍了 <a href="http://blog.csdn.net/u012806787/article/details/78796605" target="_blank" rel="external">springboot实战之服务消费者（ribbon）</a> 消费服务，本篇介绍利用Feign消费服务。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Feign是一个声明式的伪Http客户端，它使得写Http客户端变得更简单。使用Feign，只需要创建一个接口并注解。它具有可插拔的注解特性，可使用Feign 注解和JAX-RS注解。Feign支持可插拔的编码器和解码器。Feign默认集成了Ribbon，并和Eureka结合，默认实现了负载均衡的效果。</p><h2 id="创建服务消费者（springcloud-consumer-feign）"><a href="#创建服务消费者（springcloud-consumer-feign）" class="headerlink" title="创建服务消费者（springcloud-consumer-feign）"></a>创建服务消费者（springcloud-consumer-feign）</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">relativePath</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>Edgware.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="添加入口类（SpringCloudConsumerFeignApplication-java）"><a href="#添加入口类（SpringCloudConsumerFeignApplication-java）" class="headerlink" title="添加入口类（SpringCloudConsumerFeignApplication.java）"></a>添加入口类（SpringCloudConsumerFeignApplication.java）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="meta">@EnableDiscoveryClient</span></div><div class="line"><span class="meta">@EnableFeignClients</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudConsumerFeignApplication</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SpringApplication.run(SpringCloudConsumerFeignApplication.class,args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="添加配置文件（application-yml）"><a href="#添加配置文件（application-yml）" class="headerlink" title="添加配置文件（application.yml）"></a>添加配置文件（application.yml）</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">server:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">8003</span></div><div class="line"><span class="attr">spring:</span></div><div class="line"><span class="attr">  application:</span></div><div class="line"><span class="attr">    name:</span> <span class="string">springcloud-consumer-feign</span></div><div class="line"><span class="attr">eureka:</span></div><div class="line"><span class="attr">  client:</span></div><div class="line"><span class="attr">    service-url:</span></div><div class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://peer1:8080/eureka/</span></div></pre></td></tr></table></figure><h2 id="新建service层接口"><a href="#新建service层接口" class="headerlink" title="新建service层接口"></a>新建service层接口</h2><p>定义一个feign接口，通过@FeignClient（“服务名”），来指定调用哪个服务。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@FeignClient</span>(value = <span class="string">"springcloud-producer-rest"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ISchedualRestService</span> </span>&#123;</div><div class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/api/rest/info"</span>)</div><div class="line">    <span class="function">String <span class="title">info</span><span class="params">()</span> </span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="新建web层接口"><a href="#新建web层接口" class="headerlink" title="新建web层接口"></a>新建web层接口</h2><p>对外暴露http接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/api/rest"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestfulController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span> <span class="keyword">private</span> ISchedualRestService iSchedualRestService ;</div><div class="line"></div><div class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/getMessage"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMessage</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> iSchedualRestService.info() ;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h2><p>1.启动springcloud-eureka-server集群，端口分别为 8080，8090</p><p>2.启动springcloud-producer-rest，端口分别为 8001</p><p>3.启动服务消费者springcloud-consumer-feign。端口 8003</p><p>访问效果：</p><p><img src="http://note.youdao.com/favicon.ico" alt="image"></p><p>访问服务接口效果</p><p><img src="http://note.youdao.com/favicon.ico" alt="image"></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://cloud.spring.io/spring-cloud-static/Edgware.RELEASE/multi/multi_spring-cloud-feign.html" target="_blank" rel="external">spring-cloud-feign</a></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-server-eureka" target="_blank" rel="external">springcloud-server-eureka</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-producer-rest" target="_blank" rel="external">springcloud-producer-rest</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-consumer-feign" target="_blank" rel="external">springcloud-consumer-feign</a></p><h2 id="历史文章"><a href="#历史文章" class="headerlink" title="历史文章"></a>历史文章</h2><p><a href="http://blog.csdn.net/u012806787/article/details/78793639" target="_blank" rel="external">springcloud实战之高可用服务注册中心（eureka集群）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78790958" target="_blank" rel="external">springcloud实战之服务注册与发现（eureka实现）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78789312" target="_blank" rel="external">springcloud实战之技术选型：dubbo还是springcloud</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78796605" target="_blank" rel="external">springboot实战之服务消费者（ribbon）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;springcloud利用feign实现服务消费者&lt;br&gt;
    
    </summary>
    
      <category term="springcloud实战" scheme="http://yoursite.com/categories/springcloud%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="springcloud,feign" scheme="http://yoursite.com/tags/springcloud-feign/"/>
    
  </entry>
  
  <entry>
    <title>springcloud实战之5 服务消费者（ribbon）</title>
    <link href="http://yoursite.com/2017/12/16/springcloud%E5%AE%9E%E6%88%98%E4%B9%8B5%20%E6%9C%8D%E5%8A%A1%E6%B6%88%E8%B4%B9%E8%80%85%EF%BC%88ribbon%EF%BC%89/"/>
    <id>http://yoursite.com/2017/12/16/springcloud实战之5 服务消费者（ribbon）/</id>
    <published>2017-12-16T07:41:44.000Z</published>
    <updated>2018-01-07T01:54:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>springcloud利用ribbon实现服务消费者<br><a id="more"></a><br>前几篇介绍了服务注册中心以及服务提供者，目前需要一个服务消费者。</p><p>本篇介绍如何用Ribbon消费注册中心上注册的服务。</p><h2 id="Ribbon介绍"><a href="#Ribbon介绍" class="headerlink" title="Ribbon介绍"></a>Ribbon介绍</h2><p>Ribbon是一个基于HTTP和TCP客户端的负载均衡器。Feign中也使用Ribbon，下一篇会介绍Feign的使用。</p><p>Ribbon可以在通过客户端中配置的ribbonServerList服务端列表去轮询访问以达到均衡负载的作用。</p><p>当Ribbon与Eureka联合使用时，ribbonServerList会被DiscoveryEnabledNIWSServerList重写，扩展成从Eureka注册中心中获取服务端列表。同时它也会用NIWSDiscoveryPing来取代IPing，它将职责委托给Eureka来确定服务端是否已经启动。</p><p>下面我们通过实例看看如何使用Ribbon来调用服务，并实现客户端的均衡负载。</p><h2 id="创建Ribbon消费者服务"><a href="#创建Ribbon消费者服务" class="headerlink" title="创建Ribbon消费者服务"></a>创建Ribbon消费者服务</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&lt;parent&gt;</div><div class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</div><div class="line">    &lt;version&gt;1.5.9.RELEASE&lt;/version&gt;</div><div class="line">    &lt;relativePath /&gt;</div><div class="line">&lt;/parent&gt;</div><div class="line">&lt;dependencyManagement&gt;</div><div class="line">    &lt;dependencies&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;Edgware.RELEASE&lt;/version&gt;</div><div class="line">            &lt;type&gt;pom&lt;/type&gt;</div><div class="line">            &lt;scope&gt;import&lt;/scope&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">    &lt;/dependencies&gt;</div><div class="line">&lt;/dependencyManagement&gt;</div><div class="line">&lt;dependencies&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</div><div class="line">        &lt;artifactId&gt;spring-cloud-starter-eureka&lt;/artifactId&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line">    &lt;dependency&gt;</div><div class="line">        &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</div><div class="line">        &lt;artifactId&gt;spring-cloud-starter-ribbon&lt;/artifactId&gt;</div><div class="line">    &lt;/dependency&gt;</div><div class="line">&lt;/dependencies&gt;</div></pre></td></tr></table></figure><h3 id="创建入口类"><a href="#创建入口类" class="headerlink" title="创建入口类"></a>创建入口类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@EnableDiscoveryClient</span></div><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudConsumerRibbonApplication</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        SpringApplication.run(SpringCloudConsumerRibbonApplication.class,args) ;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="attr">server:</span></div><div class="line"><span class="attr">  port:</span> <span class="number">8002</span></div><div class="line"><span class="attr">spring:</span></div><div class="line"><span class="attr">  application:</span></div><div class="line"><span class="attr">    name:</span> <span class="string">springcloud-consumer-ribbon</span></div><div class="line"><span class="attr">eureka:</span></div><div class="line"><span class="attr">  client:</span></div><div class="line"><span class="attr">    service-url:</span></div><div class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://peer1:8080/eureka/</span></div></pre></td></tr></table></figure><h3 id="配置RestTemplate-bean"><a href="#配置RestTemplate-bean" class="headerlink" title="配置RestTemplate bean"></a>配置RestTemplate bean</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanConfig</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="meta">@LoadBalanced</span></div><div class="line">    <span class="function">RestTemplate <span class="title">restTemplate</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="创建service接口"><a href="#创建service接口" class="headerlink" title="创建service接口"></a>创建service接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span>(<span class="string">"restfulSerivce"</span>)</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestfulServiceImpl</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span> <span class="keyword">private</span> RestTemplate restTemplate ;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRestData</span><span class="params">(String name)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">"http://springcloud-service-rest/api/rest/message?name="</span>+name,String.class) ;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="创建controller接口"><a href="#创建controller接口" class="headerlink" title="创建controller接口"></a>创建controller接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestfulController</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span> <span class="keyword">private</span> RestfulServiceImpl restfulService ;</div><div class="line"></div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;server.port&#125;"</span>)</div><div class="line">    String port ;</div><div class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.application.name&#125;"</span>)</div><div class="line">    String name ;</div><div class="line"></div><div class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/home"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">home</span><span class="params">(@RequestParam String name)</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">"I am info from port("</span>+port+<span class="string">") from application name("</span>+name+<span class="string">") invoke other service."</span> + <span class="string">"\n"</span></div><div class="line">                +restfulService.getRestData(name);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h2><h4 id="1-启动服务注册集群（springcloud-server-eureka）"><a href="#1-启动服务注册集群（springcloud-server-eureka）" class="headerlink" title="1.启动服务注册集群（springcloud-server-eureka）"></a>1.启动服务注册集群（springcloud-server-eureka）</h4><p><a href="http://peer1:8080/" target="_blank" rel="external">http://peer1:8080/</a></p><p><a href="http://peer2:8090/" target="_blank" rel="external">http://peer2:8090/</a></p><h4 id="2-启动服务提供者（springcloud-producer-rest）"><a href="#2-启动服务提供者（springcloud-producer-rest）" class="headerlink" title="2.启动服务提供者（springcloud-producer-rest）"></a>2.启动服务提供者（springcloud-producer-rest）</h4><p><a href="http://localhost:8001/" target="_blank" rel="external">http://localhost:8001/</a></p><h4 id="3-启动服务消费者（springcloud-consumer-ribbon）"><a href="#3-启动服务消费者（springcloud-consumer-ribbon）" class="headerlink" title="3.启动服务消费者（springcloud-consumer-ribbon）"></a>3.启动服务消费者（springcloud-consumer-ribbon）</h4><p><a href="http://localhost:8002/" target="_blank" rel="external">http://localhost:8002/</a></p><p>效果图：</p><p><img src="/uploads/springcloud-ribbon.png" alt="image"></p><h2 id="调用服务"><a href="#调用服务" class="headerlink" title="调用服务"></a>调用服务</h2><p>消费者消费服务，访问消费者（springcloud-consumer-ribbon）对外提供的接口</p><p><a href="http://localhost:8002/api/rest/home" target="_blank" rel="external">http://localhost:8002/api/rest/home</a></p><p>效果图如下：</p><p><img src="/uploads/springcloud-ribbon2.png" alt="image"></p><h2 id="历史文章"><a href="#历史文章" class="headerlink" title="历史文章"></a>历史文章</h2><p><a href="http://blog.csdn.net/u012806787/article/details/78793639" target="_blank" rel="external">springcloud实战之高可用服务注册中心（eureka集群）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78790958" target="_blank" rel="external">springcloud实战之服务注册与发现（eureka实现）</a></p><p><a href="http://blog.csdn.net/u012806787/article/details/78789312" target="_blank" rel="external">springcloud实战之技术选型：dubbo还是springcloud</a></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://cloud.spring.io/spring-cloud-static/Edgware.RELEASE/multi/multi_spring-cloud-ribbon.html#netflix-ribbon-starter" target="_blank" rel="external">netflix-ribbon-starter</a></p><h2 id="项目源码"><a href="#项目源码" class="headerlink" title="项目源码"></a>项目源码</h2><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-server-eureka" target="_blank" rel="external">springcloud-server-eureka</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-producer-rest" target="_blank" rel="external">springcloud-producer-rest</a></p><p><a href="https://github.com/shiyuan2he/springcloud/tree/master/springcloud-consumer-ribbon" target="_blank" rel="external">springcloud-consumer-ribbon</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;springcloud利用ribbon实现服务消费者&lt;br&gt;
    
    </summary>
    
      <category term="springcloud实战" scheme="http://yoursite.com/categories/springcloud%E5%AE%9E%E6%88%98/"/>
    
    
      <category term="springcloud,ribbon" scheme="http://yoursite.com/tags/springcloud-ribbon/"/>
    
  </entry>
  
</feed>
